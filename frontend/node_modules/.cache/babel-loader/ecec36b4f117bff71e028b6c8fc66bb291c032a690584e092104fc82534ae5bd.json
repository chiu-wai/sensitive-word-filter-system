{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { sensitiveWordApi } from '../utils/api';\nexport default {\n  name: 'Words',\n  setup() {\n    const loading = ref(false);\n    const submitLoading = ref(false);\n    const batchSubmitLoading = ref(false);\n    const dialogVisible = ref(false);\n    const batchDialogVisible = ref(false);\n    const dialogTitle = ref('添加敏感词');\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const total = ref(0);\n    const searchCategory = ref('');\n    const searchLevel = ref('');\n    const sensitiveWords = ref([]);\n    const formRef = ref();\n\n    // 表单数据\n    const form = reactive({\n      id: null,\n      word: '',\n      category: 'default',\n      level: 1,\n      status: 1\n    });\n\n    // 批量添加数据\n    const batchWords = ref('');\n    const batchCategory = ref('default');\n    const batchLevel = ref(1);\n\n    // 表单验证规则\n    const rules = {\n      word: [{\n        required: true,\n        message: '请输入敏感词',\n        trigger: 'blur'\n      }],\n      category: [{\n        required: true,\n        message: '请选择分类',\n        trigger: 'change'\n      }],\n      level: [{\n        required: true,\n        message: '请选择级别',\n        trigger: 'change'\n      }]\n    };\n\n    // 加载敏感词列表\n    const loadSensitiveWords = async () => {\n      loading.value = true;\n      try {\n        const response = await sensitiveWordApi.getByPage(currentPage.value, pageSize.value);\n        if (response.data.code === 200) {\n          const data = response.data.data;\n          sensitiveWords.value = data.list;\n          total.value = data.total;\n        }\n      } catch (error) {\n        ElMessage.error('加载敏感词列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 显示添加对话框\n    const showAddDialog = () => {\n      dialogTitle.value = '添加敏感词';\n      dialogVisible.value = true;\n    };\n\n    // 显示编辑对话框\n    const showEditDialog = row => {\n      dialogTitle.value = '编辑敏感词';\n      Object.assign(form, row);\n      dialogVisible.value = true;\n    };\n\n    // 显示批量添加对话框\n    const showBatchAddDialog = () => {\n      batchDialogVisible.value = true;\n    };\n\n    // 提交表单\n    const handleSubmit = async () => {\n      if (!formRef.value) return;\n      await formRef.value.validate(async valid => {\n        if (valid) {\n          submitLoading.value = true;\n          try {\n            let response;\n            if (form.id) {\n              response = await sensitiveWordApi.update(form.id, form);\n            } else {\n              response = await sensitiveWordApi.add(form);\n            }\n            if (response.data.code === 200) {\n              ElMessage.success(form.id ? '更新成功' : '添加成功');\n              dialogVisible.value = false;\n\n              // 如果是添加操作，跳转到最后一页\n              if (!form.id) {\n                // 先重新加载数据获取最新总数\n                await loadSensitiveWords();\n                // 计算最后一页\n                const lastPage = Math.ceil(total.value / pageSize.value);\n                currentPage.value = lastPage;\n                // 再次加载最后一页的数据\n                await loadSensitiveWords();\n              } else {\n                loadSensitiveWords();\n              }\n              window.dispatchEvent(new Event('refreshSensitiveWordCount'));\n            } else {\n              ElMessage.error(response.data.message || '操作失败');\n            }\n          } catch (error) {\n            ElMessage.error('操作失败');\n          } finally {\n            submitLoading.value = false;\n          }\n        }\n      });\n    };\n\n    // 批量提交\n    const handleBatchSubmit = async () => {\n      if (!batchWords.value.trim()) {\n        ElMessage.warning('请输入敏感词');\n        return;\n      }\n      batchSubmitLoading.value = true;\n      try {\n        const words = batchWords.value.split('\\n').filter(word => word.trim());\n        const wordList = words.map(word => ({\n          word: word.trim(),\n          category: batchCategory.value,\n          level: batchLevel.value,\n          status: 1\n        }));\n        const response = await sensitiveWordApi.batchAdd(wordList);\n        if (response.data.code === 200) {\n          ElMessage.success(`批量添加成功，共 ${wordList.length} 个敏感词`);\n          batchDialogVisible.value = false;\n          batchWords.value = '';\n\n          // 跳转到最后一页\n          const countResponse = await sensitiveWordApi.getByPage(1, 1);\n          if (countResponse.data.code === 200) {\n            const totalCount = countResponse.data.data.total;\n            const lastPage = Math.ceil(totalCount / pageSize.value);\n            currentPage.value = lastPage;\n          }\n          loadSensitiveWords();\n          window.dispatchEvent(new Event('refreshSensitiveWordCount'));\n        } else {\n          ElMessage.error(response.data.message || '批量添加失败');\n        }\n      } catch (error) {\n        ElMessage.error('批量添加失败');\n      } finally {\n        batchSubmitLoading.value = false;\n      }\n    };\n\n    // 删除敏感词\n    const handleDelete = async row => {\n      try {\n        await ElMessageBox.confirm(`确定要删除敏感词\"${row.word}\"吗？`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        const response = await sensitiveWordApi.delete(row.id);\n        if (response.data.code === 200) {\n          ElMessage.success('删除成功');\n          loadSensitiveWords();\n          window.dispatchEvent(new Event('refreshSensitiveWordCount'));\n        } else {\n          ElMessage.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除失败');\n        }\n      }\n    };\n\n    // 状态变更\n    const handleStatusChange = async row => {\n      try {\n        const response = await sensitiveWordApi.update(row.id, row);\n        if (response.data.code === 200) {\n          ElMessage.success('状态更新成功');\n        } else {\n          ElMessage.error('状态更新失败');\n          row.status = row.status === 1 ? 0 : 1; // 恢复原状态\n        }\n      } catch (error) {\n        ElMessage.error('状态更新失败');\n        row.status = row.status === 1 ? 0 : 1; // 恢复原状态\n      }\n    };\n\n    // 重新加载字典\n    const reloadDictionary = async () => {\n      try {\n        const response = await sensitiveWordApi.reloadDictionary();\n        if (response.data.code === 200) {\n          ElMessage.success('字典重新加载成功');\n        } else {\n          ElMessage.error('字典重新加载失败');\n        }\n      } catch (error) {\n        ElMessage.error('字典重新加载失败');\n      }\n    };\n\n    // 搜索\n    const handleSearch = () => {\n      currentPage.value = 1;\n      loadSensitiveWords();\n    };\n\n    // 分页处理\n    const handleSizeChange = val => {\n      pageSize.value = val;\n      currentPage.value = 1;\n      loadSensitiveWords();\n    };\n    const handleCurrentChange = val => {\n      currentPage.value = val;\n      loadSensitiveWords();\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      if (formRef.value) {\n        formRef.value.resetFields();\n      }\n      Object.assign(form, {\n        id: null,\n        word: '',\n        category: 'default',\n        level: 1,\n        status: 1\n      });\n    };\n\n    // 工具函数\n    const formatTime = time => {\n      if (!time) return '';\n      return new Date(time).toLocaleString();\n    };\n    const getCategoryTagType = category => {\n      const types = {\n        '侮辱': 'danger',\n        '政治': 'warning',\n        '违法': 'error',\n        'default': 'info'\n      };\n      return types[category] || 'info';\n    };\n    const getLevelTagType = level => {\n      const types = {\n        1: 'success',\n        2: 'warning',\n        3: 'danger'\n      };\n      return types[level] || 'info';\n    };\n    const getLevelText = level => {\n      const texts = {\n        1: '低',\n        2: '中',\n        3: '高'\n      };\n      return texts[level] || '未知';\n    };\n    onMounted(() => {\n      loadSensitiveWords();\n    });\n    return {\n      loading,\n      submitLoading,\n      batchSubmitLoading,\n      dialogVisible,\n      batchDialogVisible,\n      dialogTitle,\n      currentPage,\n      pageSize,\n      total,\n      searchCategory,\n      searchLevel,\n      sensitiveWords,\n      form,\n      formRef,\n      rules,\n      batchWords,\n      batchCategory,\n      batchLevel,\n      showAddDialog,\n      showEditDialog,\n      showBatchAddDialog,\n      handleSubmit,\n      handleBatchSubmit,\n      handleDelete,\n      handleStatusChange,\n      reloadDictionary,\n      handleSearch,\n      handleSizeChange,\n      handleCurrentChange,\n      resetForm,\n      formatTime,\n      getCategoryTagType,\n      getLevelTagType,\n      getLevelText\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","sensitiveWordApi","name","setup","loading","submitLoading","batchSubmitLoading","dialogVisible","batchDialogVisible","dialogTitle","currentPage","pageSize","total","searchCategory","searchLevel","sensitiveWords","formRef","form","id","word","category","level","status","batchWords","batchCategory","batchLevel","rules","required","message","trigger","loadSensitiveWords","value","response","getByPage","data","code","list","error","showAddDialog","showEditDialog","row","Object","assign","showBatchAddDialog","handleSubmit","validate","valid","update","add","success","lastPage","Math","ceil","window","dispatchEvent","Event","handleBatchSubmit","trim","warning","words","split","filter","wordList","map","batchAdd","length","countResponse","totalCount","handleDelete","confirm","confirmButtonText","cancelButtonText","type","delete","handleStatusChange","reloadDictionary","handleSearch","handleSizeChange","val","handleCurrentChange","resetForm","resetFields","formatTime","time","Date","toLocaleString","getCategoryTagType","types","getLevelTagType","getLevelText","texts"],"sources":["D:\\code\\sensitive-word-filter-system\\frontend\\src\\views\\Words.vue"],"sourcesContent":["<template>\n  <div class=\"words-page\">\n    <!-- 操作栏 -->\n    <el-card class=\"operation-card\" shadow=\"hover\">\n      <el-row :gutter=\"20\" align=\"middle\">\n        <el-col :span=\"6\">\n          <el-button type=\"primary\" @click=\"showAddDialog\">\n            <el-icon><Plus /></el-icon>\n            添加敏感词\n          </el-button>\n          <el-button type=\"success\" @click=\"showBatchAddDialog\">\n            <el-icon><Upload /></el-icon>\n            批量添加\n          </el-button>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-select v-model=\"searchCategory\" placeholder=\"选择分类\" clearable @change=\"handleSearch\">\n            <el-option label=\"全部\" value=\"\" />\n            <el-option label=\"侮辱\" value=\"侮辱\" />\n            <el-option label=\"政治\" value=\"政治\" />\n            <el-option label=\"违法\" value=\"违法\" />\n            <el-option label=\"default\" value=\"default\" />\n          </el-select>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-select v-model=\"searchLevel\" placeholder=\"选择级别\" clearable @change=\"handleSearch\">\n            <el-option label=\"全部\" value=\"\" />\n            <el-option label=\"低\" :value=\"1\" />\n            <el-option label=\"中\" :value=\"2\" />\n            <el-option label=\"高\" :value=\"3\" />\n          </el-select>\n        </el-col>\n        <el-col :span=\"6\">\n          <el-button type=\"warning\" @click=\"reloadDictionary\">\n            <el-icon><Refresh /></el-icon>\n            重新加载字典\n          </el-button>\n        </el-col>\n      </el-row>\n    </el-card>\n\n    <!-- 敏感词列表 -->\n    <el-card class=\"list-card\" shadow=\"hover\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>敏感词列表</span>\n          <span class=\"total-count\">共 {{ total }} 条记录</span>\n        </div>\n      </template>\n      \n      <el-table :data=\"sensitiveWords\" style=\"width: 100%\" v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"word\" label=\"敏感词\" width=\"150\" />\n        <el-table-column prop=\"category\" label=\"分类\" width=\"120\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getCategoryTagType(scope.row.category)\">\n              {{ scope.row.category }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"level\" label=\"级别\" width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getLevelTagType(scope.row.level)\">\n              {{ getLevelText(scope.row.level) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template #default=\"scope\">\n            <el-switch\n              v-model=\"scope.row.status\"\n              :active-value=\"1\"\n              :inactive-value=\"0\"\n              @change=\"handleStatusChange(scope.row)\"\n            />\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\">\n          <template #default=\"scope\">\n            {{ formatTime(scope.row.createTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button type=\"primary\" size=\"small\" @click=\"showEditDialog(scope.row)\">\n              <el-icon><Edit /></el-icon>\n              编辑\n            </el-button>\n            <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope.row)\">\n              <el-icon><Delete /></el-icon>\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页 -->\n      <div class=\"pagination-wrapper\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          v-model:page-size=\"pageSize\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :total=\"total\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n\n    <!-- 添加/编辑对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"dialogTitle\"\n      width=\"500px\"\n      @close=\"resetForm\"\n    >\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"100px\">\n        <el-form-item label=\"敏感词\" prop=\"word\">\n          <el-input v-model=\"form.word\" placeholder=\"请输入敏感词\" />\n        </el-form-item>\n        <el-form-item label=\"分类\" prop=\"category\">\n          <el-select v-model=\"form.category\" placeholder=\"请选择分类\">\n            <el-option label=\"侮辱\" value=\"侮辱\" />\n            <el-option label=\"政治\" value=\"政治\" />\n            <el-option label=\"违法\" value=\"违法\" />\n            <el-option label=\"default\" value=\"default\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"级别\" prop=\"level\">\n          <el-radio-group v-model=\"form.level\">\n            <el-radio :label=\"1\">低</el-radio>\n            <el-radio :label=\"2\">中</el-radio>\n            <el-radio :label=\"3\">高</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio :label=\"1\">启用</el-radio>\n            <el-radio :label=\"0\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitLoading\">\n            确定\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n    <!-- 批量添加对话框 -->\n    <el-dialog\n      v-model=\"batchDialogVisible\"\n      title=\"批量添加敏感词\"\n      width=\"600px\"\n    >\n      <el-form>\n        <el-form-item label=\"敏感词列表\">\n          <el-input\n            v-model=\"batchWords\"\n            type=\"textarea\"\n            :rows=\"10\"\n            placeholder=\"请输入敏感词，每行一个\"\n          />\n        </el-form-item>\n        <el-form-item label=\"分类\">\n          <el-select v-model=\"batchCategory\" placeholder=\"请选择分类\">\n            <el-option label=\"侮辱\" value=\"侮辱\" />\n            <el-option label=\"政治\" value=\"政治\" />\n            <el-option label=\"违法\" value=\"违法\" />\n            <el-option label=\"default\" value=\"default\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"级别\">\n          <el-radio-group v-model=\"batchLevel\">\n            <el-radio :label=\"1\">低</el-radio>\n            <el-radio :label=\"2\">中</el-radio>\n            <el-radio :label=\"3\">高</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"batchDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handleBatchSubmit\" :loading=\"batchSubmitLoading\">\n            确定\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { sensitiveWordApi } from '../utils/api'\n\nexport default {\n  name: 'Words',\n  setup() {\n    const loading = ref(false)\n    const submitLoading = ref(false)\n    const batchSubmitLoading = ref(false)\n    const dialogVisible = ref(false)\n    const batchDialogVisible = ref(false)\n    const dialogTitle = ref('添加敏感词')\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const total = ref(0)\n    const searchCategory = ref('')\n    const searchLevel = ref('')\n    const sensitiveWords = ref([])\n    const formRef = ref()\n\n    // 表单数据\n    const form = reactive({\n      id: null,\n      word: '',\n      category: 'default',\n      level: 1,\n      status: 1\n    })\n\n    // 批量添加数据\n    const batchWords = ref('')\n    const batchCategory = ref('default')\n    const batchLevel = ref(1)\n\n    // 表单验证规则\n    const rules = {\n      word: [\n        { required: true, message: '请输入敏感词', trigger: 'blur' }\n      ],\n      category: [\n        { required: true, message: '请选择分类', trigger: 'change' }\n      ],\n      level: [\n        { required: true, message: '请选择级别', trigger: 'change' }\n      ]\n    }\n\n    // 加载敏感词列表\n    const loadSensitiveWords = async () => {\n      loading.value = true\n      try {\n        const response = await sensitiveWordApi.getByPage(currentPage.value, pageSize.value)\n        if (response.data.code === 200) {\n          const data = response.data.data\n          sensitiveWords.value = data.list\n          total.value = data.total\n        }\n      } catch (error) {\n        ElMessage.error('加载敏感词列表失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 显示添加对话框\n    const showAddDialog = () => {\n      dialogTitle.value = '添加敏感词'\n      dialogVisible.value = true\n    }\n\n    // 显示编辑对话框\n    const showEditDialog = (row) => {\n      dialogTitle.value = '编辑敏感词'\n      Object.assign(form, row)\n      dialogVisible.value = true\n    }\n\n    // 显示批量添加对话框\n    const showBatchAddDialog = () => {\n      batchDialogVisible.value = true\n    }\n\n    // 提交表单\n    const handleSubmit = async () => {\n      if (!formRef.value) return\n      \n      await formRef.value.validate(async (valid) => {\n        if (valid) {\n          submitLoading.value = true\n          try {\n            let response\n            if (form.id) {\n              response = await sensitiveWordApi.update(form.id, form)\n            } else {\n              response = await sensitiveWordApi.add(form)\n            }\n            \n            if (response.data.code === 200) {\n              ElMessage.success(form.id ? '更新成功' : '添加成功')\n              dialogVisible.value = false\n              \n              // 如果是添加操作，跳转到最后一页\n              if (!form.id) {\n                // 先重新加载数据获取最新总数\n                await loadSensitiveWords()\n                // 计算最后一页\n                const lastPage = Math.ceil(total.value / pageSize.value)\n                currentPage.value = lastPage\n                // 再次加载最后一页的数据\n                await loadSensitiveWords()\n              } else {\n                loadSensitiveWords()\n              }\n              \n              window.dispatchEvent(new Event('refreshSensitiveWordCount'))\n            } else {\n              ElMessage.error(response.data.message || '操作失败')\n            }\n          } catch (error) {\n            ElMessage.error('操作失败')\n          } finally {\n            submitLoading.value = false\n          }\n        }\n      })\n    }\n\n    // 批量提交\n    const handleBatchSubmit = async () => {\n      if (!batchWords.value.trim()) {\n        ElMessage.warning('请输入敏感词')\n        return\n      }\n\n      batchSubmitLoading.value = true\n      try {\n        const words = batchWords.value.split('\\n').filter(word => word.trim())\n        const wordList = words.map(word => ({\n          word: word.trim(),\n          category: batchCategory.value,\n          level: batchLevel.value,\n          status: 1\n        }))\n\n        const response = await sensitiveWordApi.batchAdd(wordList)\n        if (response.data.code === 200) {\n          ElMessage.success(`批量添加成功，共 ${wordList.length} 个敏感词`)\n          batchDialogVisible.value = false\n          batchWords.value = ''\n          \n          // 跳转到最后一页\n          const countResponse = await sensitiveWordApi.getByPage(1, 1)\n          if (countResponse.data.code === 200) {\n            const totalCount = countResponse.data.data.total\n            const lastPage = Math.ceil(totalCount / pageSize.value)\n            currentPage.value = lastPage\n          }\n          \n          loadSensitiveWords()\n          window.dispatchEvent(new Event('refreshSensitiveWordCount'))\n        } else {\n          ElMessage.error(response.data.message || '批量添加失败')\n        }\n      } catch (error) {\n        ElMessage.error('批量添加失败')\n      } finally {\n        batchSubmitLoading.value = false\n      }\n    }\n\n    // 删除敏感词\n    const handleDelete = async (row) => {\n      try {\n        await ElMessageBox.confirm(`确定要删除敏感词\"${row.word}\"吗？`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        const response = await sensitiveWordApi.delete(row.id)\n        if (response.data.code === 200) {\n          ElMessage.success('删除成功')\n          loadSensitiveWords()\n          window.dispatchEvent(new Event('refreshSensitiveWordCount'))\n        } else {\n          ElMessage.error(response.data.message || '删除失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除失败')\n        }\n      }\n    }\n\n    // 状态变更\n    const handleStatusChange = async (row) => {\n      try {\n        const response = await sensitiveWordApi.update(row.id, row)\n        if (response.data.code === 200) {\n          ElMessage.success('状态更新成功')\n        } else {\n          ElMessage.error('状态更新失败')\n          row.status = row.status === 1 ? 0 : 1 // 恢复原状态\n        }\n      } catch (error) {\n        ElMessage.error('状态更新失败')\n        row.status = row.status === 1 ? 0 : 1 // 恢复原状态\n      }\n    }\n\n    // 重新加载字典\n    const reloadDictionary = async () => {\n      try {\n        const response = await sensitiveWordApi.reloadDictionary()\n        if (response.data.code === 200) {\n          ElMessage.success('字典重新加载成功')\n        } else {\n          ElMessage.error('字典重新加载失败')\n        }\n      } catch (error) {\n        ElMessage.error('字典重新加载失败')\n      }\n    }\n\n    // 搜索\n    const handleSearch = () => {\n      currentPage.value = 1\n      loadSensitiveWords()\n    }\n\n    // 分页处理\n    const handleSizeChange = (val) => {\n      pageSize.value = val\n      currentPage.value = 1\n      loadSensitiveWords()\n    }\n\n    const handleCurrentChange = (val) => {\n      currentPage.value = val\n      loadSensitiveWords()\n    }\n\n    // 重置表单\n    const resetForm = () => {\n      if (formRef.value) {\n        formRef.value.resetFields()\n      }\n      Object.assign(form, {\n        id: null,\n        word: '',\n        category: 'default',\n        level: 1,\n        status: 1\n      })\n    }\n\n    // 工具函数\n    const formatTime = (time) => {\n      if (!time) return ''\n      return new Date(time).toLocaleString()\n    }\n\n    const getCategoryTagType = (category) => {\n      const types = {\n        '侮辱': 'danger',\n        '政治': 'warning',\n        '违法': 'error',\n        'default': 'info'\n      }\n      return types[category] || 'info'\n    }\n\n    const getLevelTagType = (level) => {\n      const types = {\n        1: 'success',\n        2: 'warning',\n        3: 'danger'\n      }\n      return types[level] || 'info'\n    }\n\n    const getLevelText = (level) => {\n      const texts = {\n        1: '低',\n        2: '中',\n        3: '高'\n      }\n      return texts[level] || '未知'\n    }\n\n    onMounted(() => {\n      loadSensitiveWords()\n    })\n\n    return {\n      loading,\n      submitLoading,\n      batchSubmitLoading,\n      dialogVisible,\n      batchDialogVisible,\n      dialogTitle,\n      currentPage,\n      pageSize,\n      total,\n      searchCategory,\n      searchLevel,\n      sensitiveWords,\n      form,\n      formRef,\n      rules,\n      batchWords,\n      batchCategory,\n      batchLevel,\n      showAddDialog,\n      showEditDialog,\n      showBatchAddDialog,\n      handleSubmit,\n      handleBatchSubmit,\n      handleDelete,\n      handleStatusChange,\n      reloadDictionary,\n      handleSearch,\n      handleSizeChange,\n      handleCurrentChange,\n      resetForm,\n      formatTime,\n      getCategoryTagType,\n      getLevelTagType,\n      getLevelText\n    }\n  }\n}\n</script>\n\n<style scoped>\n.words-page {\n  padding: 20px;\n}\n\n.operation-card {\n  margin-bottom: 20px;\n}\n\n.list-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.total-count {\n  color: #909399;\n  font-size: 14px;\n}\n\n.pagination-wrapper {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n@media (max-width: 768px) {\n  .operation-card .el-row {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .operation-card .el-col {\n    width: 100%;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}