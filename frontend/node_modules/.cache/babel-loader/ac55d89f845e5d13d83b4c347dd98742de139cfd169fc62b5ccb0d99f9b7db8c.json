{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"filter-page\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  class: \"card-header\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"result-content\"\n};\nconst _hoisted_5 = {\n  class: \"result-section\"\n};\nconst _hoisted_6 = {\n  class: \"text-display\"\n};\nconst _hoisted_7 = {\n  class: \"result-section\"\n};\nconst _hoisted_8 = {\n  class: \"text-display filtered\"\n};\nconst _hoisted_9 = {\n  class: \"result-section\"\n};\nconst _hoisted_10 = {\n  class: \"detection-result\"\n};\nconst _hoisted_11 = {\n  class: \"result-item\"\n};\nconst _hoisted_12 = {\n  class: \"result-item\"\n};\nconst _hoisted_13 = {\n  class: \"value\"\n};\nconst _hoisted_14 = {\n  class: \"result-item\"\n};\nconst _hoisted_15 = {\n  class: \"value\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"result-section\"\n};\nconst _hoisted_17 = {\n  class: \"sensitive-words\"\n};\nconst _hoisted_18 = {\n  key: 1,\n  class: \"empty-result\"\n};\nconst _hoisted_19 = {\n  class: \"card-header\"\n};\nconst _hoisted_20 = {\n  class: \"batch-preview\"\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"batch-results\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Edit = _resolveComponent(\"Edit\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_Filter = _resolveComponent(\"Filter\", true);\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_Search = _resolveComponent(\"Search\");\n  const _component_Delete = _resolveComponent(\"Delete\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_Document = _resolveComponent(\"Document\");\n  const _component_CopyDocument = _resolveComponent(\"CopyDocument\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_empty = _resolveComponent(\"el-empty\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_Files = _resolveComponent(\"Files\");\n  const _component_Upload = _resolveComponent(\"Upload\");\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 文本输入区域 \"), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"input-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Edit)]),\n          _: 1 /* STABLE */\n        }), _cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"文本输入\", -1 /* CACHED */))])]),\n        default: _withCtx(() => [_createVNode(_component_el_form, null, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $setup.inputText,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputText = $event),\n              type: \"textarea\",\n              rows: 15,\n              placeholder: \"请输入要过滤的文本内容...\",\n              disabled: $setup.loading,\n              \"show-word-limit\": \"\",\n              maxlength: \"5000\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: $setup.handleFilter,\n              loading: $setup.loading\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                default: _withCtx(() => [_createVNode(_component_Filter)]),\n                _: 1 /* STABLE */\n              }), _cache[2] || (_cache[2] = _createTextVNode(\" 开始过滤 \", -1 /* CACHED */))]),\n              _: 1 /* STABLE */,\n              __: [2]\n            }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n              onClick: $setup.handleCheck,\n              loading: $setup.loading\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                default: _withCtx(() => [_createVNode(_component_Search)]),\n                _: 1 /* STABLE */\n              }), _cache[3] || (_cache[3] = _createTextVNode(\" 仅检测 \", -1 /* CACHED */))]),\n              _: 1 /* STABLE */,\n              __: [3]\n            }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n              onClick: $setup.handleClear\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                default: _withCtx(() => [_createVNode(_component_Delete)]),\n                _: 1 /* STABLE */\n              }), _cache[4] || (_cache[4] = _createTextVNode(\" 清空 \", -1 /* CACHED */))]),\n              _: 1 /* STABLE */,\n              __: [4]\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 过滤结果区域 \"), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"result-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Document)]),\n          _: 1 /* STABLE */\n        }), _cache[6] || (_cache[6] = _createElementVNode(\"span\", null, \"过滤结果\", -1 /* CACHED */)), $setup.filterResult ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          type: \"text\",\n          onClick: $setup.copyResult,\n          style: {\n            \"margin-left\": \"auto\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n            default: _withCtx(() => [_createVNode(_component_CopyDocument)]),\n            _: 1 /* STABLE */\n          }), _cache[5] || (_cache[5] = _createTextVNode(\" 复制结果 \", -1 /* CACHED */))]),\n          _: 1 /* STABLE */,\n          __: [5]\n        }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]),\n        default: _withCtx(() => [$setup.filterResult ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[7] || (_cache[7] = _createElementVNode(\"h4\", null, \"原始文本\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_6, _toDisplayString($setup.filterResult.originalText), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_7, [_cache[8] || (_cache[8] = _createElementVNode(\"h4\", null, \"过滤后文本\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.filterResult.filteredText), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_cache[12] || (_cache[12] = _createElementVNode(\"h4\", null, \"检测结果\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[9] || (_cache[9] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"是否包含敏感词：\", -1 /* CACHED */)), _createVNode(_component_el_tag, {\n          type: $setup.filterResult.hasSensitiveWord ? 'danger' : 'success'\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.filterResult.hasSensitiveWord ? '是' : '否'), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_12, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"敏感词数量：\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_13, _toDisplayString($setup.filterResult.sensitiveWordCount), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_14, [_cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n          class: \"label\"\n        }, \"过滤时间：\", -1 /* CACHED */)), _createElementVNode(\"span\", _hoisted_15, _toDisplayString($setup.filterResult.filterTime) + \"ms\", 1 /* TEXT */)])])]), $setup.filterResult.sensitiveWords && $setup.filterResult.sensitiveWords.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_cache[13] || (_cache[13] = _createElementVNode(\"h4\", null, \"检测到的敏感词\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_17, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filterResult.sensitiveWords, word => {\n          return _openBlock(), _createBlock(_component_el_tag, {\n            key: word,\n            type: \"danger\",\n            effect: \"dark\",\n            style: {\n              \"margin\": \"5px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(word), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createVNode(_component_el_empty, {\n          description: \"暂无过滤结果\"\n        })]))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 批量处理区域 \"), _createVNode(_component_el_row, {\n    gutter: 20,\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"batch-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_19, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Files)]),\n          _: 1 /* STABLE */\n        }), _cache[14] || (_cache[14] = _createElementVNode(\"span\", null, \"批量处理\", -1 /* CACHED */))])]),\n        default: _withCtx(() => [_createVNode(_component_el_form, null, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_upload, {\n              ref: \"uploadRef\",\n              \"auto-upload\": false,\n              \"on-change\": $setup.handleFileChange,\n              \"show-file-list\": false,\n              accept: \".txt,.csv\"\n            }, {\n              tip: _withCtx(() => _cache[16] || (_cache[16] = [_createElementVNode(\"div\", {\n                class: \"el-upload__tip\"\n              }, \" 支持 .txt 和 .csv 格式文件，每行一个文本 \", -1 /* CACHED */)])),\n              default: _withCtx(() => [_createVNode(_component_el_button, {\n                type: \"primary\"\n              }, {\n                default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                  default: _withCtx(() => [_createVNode(_component_Upload)]),\n                  _: 1 /* STABLE */\n                }), _cache[15] || (_cache[15] = _createTextVNode(\" 选择文件 \", -1 /* CACHED */))]),\n                _: 1 /* STABLE */,\n                __: [15]\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"on-change\"])]),\n            _: 1 /* STABLE */\n          }), $setup.batchTexts.length > 0 ? (_openBlock(), _createBlock(_component_el_form_item, {\n            key: 0\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"h4\", null, \"文件预览（共 \" + _toDisplayString($setup.batchTexts.length) + \" 行）\", 1 /* TEXT */), _createVNode(_component_el_input, {\n              value: $setup.batchTexts.join('\\n'),\n              type: \"textarea\",\n              rows: 6,\n              readonly: \"\"\n            }, null, 8 /* PROPS */, [\"value\"])]), _createVNode(_component_el_button, {\n              type: \"success\",\n              onClick: $setup.handleBatchFilter,\n              loading: $setup.batchLoading\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                default: _withCtx(() => [_createVNode(_component_Filter)]),\n                _: 1 /* STABLE */\n              }), _cache[17] || (_cache[17] = _createTextVNode(\" 批量过滤 \", -1 /* CACHED */))]),\n              _: 1 /* STABLE */,\n              __: [17]\n            }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n              onClick: $setup.clearBatch\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                default: _withCtx(() => [_createVNode(_component_Delete)]),\n                _: 1 /* STABLE */\n              }), _cache[18] || (_cache[18] = _createTextVNode(\" 清空 \", -1 /* CACHED */))]),\n              _: 1 /* STABLE */,\n              __: [18]\n            }, 8 /* PROPS */, [\"onClick\"])]),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        }), $setup.batchResults.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [_createVNode(_component_el_divider, {\n          \"content-position\": \"left\"\n        }, {\n          default: _withCtx(() => _cache[19] || (_cache[19] = [_createTextVNode(\"批量处理结果\", -1 /* CACHED */)])),\n          _: 1 /* STABLE */,\n          __: [19]\n        }), _createVNode(_component_el_table, {\n          data: $setup.batchResults,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"index\",\n            label: \"序号\",\n            width: \"80\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"originalText\",\n            label: \"原始文本\",\n            \"show-overflow-tooltip\": \"\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"filteredText\",\n            label: \"过滤后文本\",\n            \"show-overflow-tooltip\": \"\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"hasSensitiveWord\",\n            label: \"包含敏感词\",\n            width: \"120\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: scope.row.hasSensitiveWord ? 'danger' : 'success'\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.hasSensitiveWord ? '是' : '否'), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"sensitiveWordCount\",\n            label: \"敏感词数量\",\n            width: \"120\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"data\"])])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","gutter","_createCommentVNode","_component_el_col","span","_component_el_card","shadow","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_icon","_component_Edit","_component_el_form","_component_el_form_item","_component_el_input","$setup","inputText","$event","type","rows","placeholder","disabled","loading","maxlength","_component_el_button","onClick","handleFilter","_component_Filter","handleCheck","_component_Search","handleClear","_component_Delete","_hoisted_3","_component_Document","filterResult","_createBlock","copyResult","style","_component_CopyDocument","_hoisted_4","_hoisted_5","_hoisted_6","_toDisplayString","originalText","_hoisted_7","_hoisted_8","filteredText","_hoisted_9","_hoisted_10","_hoisted_11","_component_el_tag","hasSensitiveWord","_hoisted_12","_hoisted_13","sensitiveWordCount","_hoisted_14","_hoisted_15","filterTime","sensitiveWords","length","_hoisted_16","_hoisted_17","_Fragment","_renderList","word","key","effect","_hoisted_18","_component_el_empty","description","_hoisted_19","_component_Files","_component_el_upload","ref","handleFileChange","accept","tip","_cache","_component_Upload","batchTexts","_hoisted_20","value","join","readonly","handleBatchFilter","batchLoading","clearBatch","batchResults","_hoisted_21","_component_el_divider","_component_el_table","data","_component_el_table_column","prop","label","width","default","scope","row"],"sources":["D:\\code\\sensitive-word-filter-system\\frontend\\src\\views\\Filter.vue"],"sourcesContent":["<template>\n  <div class=\"filter-page\">\n    <el-row :gutter=\"20\">\n      <!-- 文本输入区域 -->\n      <el-col :span=\"12\">\n        <el-card class=\"input-card\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header\">\n              <el-icon><Edit /></el-icon>\n              <span>文本输入</span>\n            </div>\n          </template>\n          \n          <el-form>\n            <el-form-item>\n              <el-input\n                v-model=\"inputText\"\n                type=\"textarea\"\n                :rows=\"15\"\n                placeholder=\"请输入要过滤的文本内容...\"\n                :disabled=\"loading\"\n                show-word-limit\n                maxlength=\"5000\"\n              />\n            </el-form-item>\n            \n            <el-form-item>\n              <el-button type=\"primary\" @click=\"handleFilter\" :loading=\"loading\">\n                <el-icon><Filter /></el-icon>\n                开始过滤\n              </el-button>\n              <el-button @click=\"handleCheck\" :loading=\"loading\">\n                <el-icon><Search /></el-icon>\n                仅检测\n              </el-button>\n              <el-button @click=\"handleClear\">\n                <el-icon><Delete /></el-icon>\n                清空\n              </el-button>\n            </el-form-item>\n          </el-form>\n        </el-card>\n      </el-col>\n\n      <!-- 过滤结果区域 -->\n      <el-col :span=\"12\">\n        <el-card class=\"result-card\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header\">\n              <el-icon><Document /></el-icon>\n              <span>过滤结果</span>\n              <el-button \n                v-if=\"filterResult\" \n                type=\"text\" \n                @click=\"copyResult\"\n                style=\"margin-left: auto;\"\n              >\n                <el-icon><CopyDocument /></el-icon>\n                复制结果\n              </el-button>\n            </div>\n          </template>\n          \n          <div v-if=\"filterResult\" class=\"result-content\">\n            <div class=\"result-section\">\n              <h4>原始文本</h4>\n              <div class=\"text-display\">{{ filterResult.originalText }}</div>\n            </div>\n            \n            <div class=\"result-section\">\n              <h4>过滤后文本</h4>\n              <div class=\"text-display filtered\">{{ filterResult.filteredText }}</div>\n            </div>\n            \n            <div class=\"result-section\">\n              <h4>检测结果</h4>\n              <div class=\"detection-result\">\n                <div class=\"result-item\">\n                  <span class=\"label\">是否包含敏感词：</span>\n                  <el-tag :type=\"filterResult.hasSensitiveWord ? 'danger' : 'success'\">\n                    {{ filterResult.hasSensitiveWord ? '是' : '否' }}\n                  </el-tag>\n                </div>\n                \n                <div class=\"result-item\">\n                  <span class=\"label\">敏感词数量：</span>\n                  <span class=\"value\">{{ filterResult.sensitiveWordCount }}</span>\n                </div>\n                \n                <div class=\"result-item\">\n                  <span class=\"label\">过滤时间：</span>\n                  <span class=\"value\">{{ filterResult.filterTime }}ms</span>\n                </div>\n              </div>\n            </div>\n            \n            <div v-if=\"filterResult.sensitiveWords && filterResult.sensitiveWords.length > 0\" class=\"result-section\">\n              <h4>检测到的敏感词</h4>\n              <div class=\"sensitive-words\">\n                <el-tag \n                  v-for=\"word in filterResult.sensitiveWords\" \n                  :key=\"word\" \n                  type=\"danger\" \n                  effect=\"dark\"\n                  style=\"margin: 5px;\"\n                >\n                  {{ word }}\n                </el-tag>\n              </div>\n            </div>\n          </div>\n          \n          <div v-else class=\"empty-result\">\n            <el-empty description=\"暂无过滤结果\" />\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 批量处理区域 -->\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <el-col :span=\"24\">\n        <el-card class=\"batch-card\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header\">\n              <el-icon><Files /></el-icon>\n              <span>批量处理</span>\n            </div>\n          </template>\n          \n          <el-form>\n            <el-form-item>\n              <el-upload\n                ref=\"uploadRef\"\n                :auto-upload=\"false\"\n                :on-change=\"handleFileChange\"\n                :show-file-list=\"false\"\n                accept=\".txt,.csv\"\n              >\n                <el-button type=\"primary\">\n                  <el-icon><Upload /></el-icon>\n                  选择文件\n                </el-button>\n                <template #tip>\n                  <div class=\"el-upload__tip\">\n                    支持 .txt 和 .csv 格式文件，每行一个文本\n                  </div>\n                </template>\n              </el-upload>\n            </el-form-item>\n            \n            <el-form-item v-if=\"batchTexts.length > 0\">\n              <div class=\"batch-preview\">\n                <h4>文件预览（共 {{ batchTexts.length }} 行）</h4>\n                <el-input\n                  :value=\"batchTexts.join('\\n')\"\n                  type=\"textarea\"\n                  :rows=\"6\"\n                  readonly\n                />\n              </div>\n              \n              <el-button type=\"success\" @click=\"handleBatchFilter\" :loading=\"batchLoading\">\n                <el-icon><Filter /></el-icon>\n                批量过滤\n              </el-button>\n              <el-button @click=\"clearBatch\">\n                <el-icon><Delete /></el-icon>\n                清空\n              </el-button>\n            </el-form-item>\n          </el-form>\n          \n          <!-- 批量处理结果 -->\n          <div v-if=\"batchResults.length > 0\" class=\"batch-results\">\n            <el-divider content-position=\"left\">批量处理结果</el-divider>\n            <el-table :data=\"batchResults\" style=\"width: 100%\">\n              <el-table-column prop=\"index\" label=\"序号\" width=\"80\" />\n              <el-table-column prop=\"originalText\" label=\"原始文本\" show-overflow-tooltip />\n              <el-table-column prop=\"filteredText\" label=\"过滤后文本\" show-overflow-tooltip />\n              <el-table-column prop=\"hasSensitiveWord\" label=\"包含敏感词\" width=\"120\">\n                <template #default=\"scope\">\n                  <el-tag :type=\"scope.row.hasSensitiveWord ? 'danger' : 'success'\">\n                    {{ scope.row.hasSensitiveWord ? '是' : '否' }}\n                  </el-tag>\n                </template>\n              </el-table-column>\n              <el-table-column prop=\"sensitiveWordCount\" label=\"敏感词数量\" width=\"120\" />\n            </el-table>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { filterApi } from '../utils/api'\n\nexport default {\n  name: 'SensitiveFilter',\n  setup() {\n    const loading = ref(false)\n    const batchLoading = ref(false)\n    const inputText = ref('')\n    const filterResult = ref(null)\n    const batchTexts = ref([])\n    const batchResults = ref([])\n    const uploadRef = ref()\n\n    // 过滤文本\n    const handleFilter = async () => {\n      if (!inputText.value.trim()) {\n        ElMessage.warning('请输入要过滤的文本')\n        return\n      }\n      loading.value = true\n      try {\n        const response = await filterApi.filterText(inputText.value)\n        if (response.data.code === 200) {\n          filterResult.value = response.data.data\n          ElMessage.success('过滤完成')\n        } else {\n          ElMessage.error(response.data.message || '过滤失败')\n        }\n      } catch (error) {\n        ElMessage.error('过滤失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 检测文本\n    const handleCheck = async () => {\n      if (!inputText.value.trim()) {\n        ElMessage.warning('请输入要检测的文本')\n        return\n      }\n      loading.value = true\n      try {\n        const response = await filterApi.checkText(inputText.value)\n        if (response.data.code === 200) {\n          const data = response.data.data\n          filterResult.value = {\n            originalText: inputText.value,\n            filteredText: inputText.value,\n            sensitiveWords: data.sensitiveWords,\n            hasSensitiveWord: data.containsSensitiveWord,\n            sensitiveWordCount: data.sensitiveWordCount,\n            filterTime: 0\n          }\n          ElMessage.success('检测完成')\n        } else {\n          ElMessage.error(response.data.message || '检测失败')\n        }\n      } catch (error) {\n        ElMessage.error('检测失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 清空输入\n    const handleClear = () => {\n      inputText.value = ''\n      filterResult.value = null\n    }\n\n    // 复制结果\n    const copyResult = () => {\n      if (filterResult.value) {\n        navigator.clipboard.writeText(filterResult.value.filteredText).then(() => {\n          ElMessage.success('已复制到剪贴板')\n        }).catch(() => {\n          ElMessage.error('复制失败')\n        })\n      }\n    }\n\n    // 文件上传处理\n    const handleFileChange = (file) => {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        const content = e.target.result\n        batchTexts.value = content.split('\\n').filter(line => line.trim())\n        ElMessage.success(`成功加载 ${batchTexts.value.length} 行文本`)\n      }\n      reader.readAsText(file.raw)\n    }\n\n    // 批量过滤\n    const handleBatchFilter = async () => {\n      if (batchTexts.value.length === 0) {\n        ElMessage.warning('请先选择文件')\n        return\n      }\n\n      batchLoading.value = true\n      batchResults.value = []\n\n      try {\n        for (let i = 0; i < batchTexts.value.length; i++) {\n          const text = batchTexts.value[i]\n          if (text.trim()) {\n            const response = await filterApi.filterText(text)\n            if (response.code === 200) {\n              batchResults.value.push({\n                index: i + 1,\n                originalText: text,\n                filteredText: response.data.filteredText,\n                hasSensitiveWord: response.data.hasSensitiveWord,\n                sensitiveWordCount: response.data.sensitiveWordCount\n              })\n            }\n          }\n        }\n        ElMessage.success(`批量处理完成，共处理 ${batchResults.value.length} 条文本`)\n      } catch (error) {\n        ElMessage.error('批量处理失败')\n      } finally {\n        batchLoading.value = false\n      }\n    }\n\n    // 清空批量数据\n    const clearBatch = () => {\n      batchTexts.value = []\n      batchResults.value = []\n      if (uploadRef.value) {\n        uploadRef.value.clearFiles()\n      }\n    }\n\n    return {\n      loading,\n      batchLoading,\n      inputText,\n      filterResult,\n      batchTexts,\n      batchResults,\n      uploadRef,\n      handleFilter,\n      handleCheck,\n      handleClear,\n      copyResult,\n      handleFileChange,\n      handleBatchFilter,\n      clearBatch\n    }\n  }\n}\n</script>\n\n<style scoped>\n.filter-page {\n  padding: 20px;\n}\n\n.input-card,\n.result-card,\n.batch-card {\n  height: 100%;\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.card-header .el-icon {\n  margin-right: 8px;\n  font-size: 18px;\n}\n\n.result-content {\n  height: 100%;\n}\n\n.result-section {\n  margin-bottom: 20px;\n}\n\n.result-section h4 {\n  margin-bottom: 10px;\n  color: #303133;\n  font-size: 14px;\n  font-weight: bold;\n}\n\n.text-display {\n  padding: 10px;\n  background-color: #f8f9fa;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  min-height: 80px;\n  word-break: break-all;\n  line-height: 1.6;\n}\n\n.text-display.filtered {\n  color: #e6a23c;\n  font-weight: bold;\n}\n\n.detection-result {\n  background-color: #f8f9fa;\n  padding: 15px;\n  border-radius: 4px;\n}\n\n.result-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.result-item:last-child {\n  margin-bottom: 0;\n}\n\n.result-item .label {\n  width: 120px;\n  color: #606266;\n  font-weight: 500;\n}\n\n.result-item .value {\n  color: #303133;\n  font-weight: bold;\n}\n\n.sensitive-words {\n  background-color: #f8f9fa;\n  padding: 15px;\n  border-radius: 4px;\n  min-height: 60px;\n}\n\n.empty-result {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 300px;\n}\n\n.batch-preview {\n  margin-bottom: 15px;\n}\n\n.batch-preview h4 {\n  margin-bottom: 10px;\n  color: #303133;\n  font-size: 14px;\n  font-weight: bold;\n}\n\n.batch-results {\n  margin-top: 20px;\n}\n\n.el-upload__tip {\n  color: #909399;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n@media (max-width: 768px) {\n  .result-item .label {\n    width: 100px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}