{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"statistics-page\"\n};\nconst _hoisted_2 = {\n  class: \"stat-content\"\n};\nconst _hoisted_3 = {\n  class: \"stat-icon\"\n};\nconst _hoisted_4 = {\n  class: \"stat-info\"\n};\nconst _hoisted_5 = {\n  class: \"stat-number\"\n};\nconst _hoisted_6 = {\n  class: \"stat-content\"\n};\nconst _hoisted_7 = {\n  class: \"stat-icon\"\n};\nconst _hoisted_8 = {\n  class: \"stat-info\"\n};\nconst _hoisted_9 = {\n  class: \"stat-number\"\n};\nconst _hoisted_10 = {\n  class: \"stat-content\"\n};\nconst _hoisted_11 = {\n  class: \"stat-icon\"\n};\nconst _hoisted_12 = {\n  class: \"stat-info\"\n};\nconst _hoisted_13 = {\n  class: \"stat-number\"\n};\nconst _hoisted_14 = {\n  class: \"stat-content\"\n};\nconst _hoisted_15 = {\n  class: \"stat-icon\"\n};\nconst _hoisted_16 = {\n  class: \"stat-info\"\n};\nconst _hoisted_17 = {\n  class: \"stat-number\"\n};\nconst _hoisted_18 = {\n  class: \"card-header\"\n};\nconst _hoisted_19 = {\n  class: \"chart-container\"\n};\nconst _hoisted_20 = {\n  class: \"chart-container\"\n};\nconst _hoisted_21 = {\n  class: \"chart-container\"\n};\nconst _hoisted_22 = {\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Document = _resolveComponent(\"Document\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_Filter = _resolveComponent(\"Filter\");\n  const _component_TrendCharts = _resolveComponent(\"TrendCharts\");\n  const _component_Timer = _resolveComponent(\"Timer\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_v_chart = _resolveComponent(\"v-chart\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_progress = _resolveComponent(\"el-progress\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 统计概览 \"), _createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"stat-card\",\n        shadow: \"hover\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Document)]),\n          _: 1 /* STABLE */\n        })]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, _toDisplayString($setup.statistics.totalWords || 0), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n          class: \"stat-label\"\n        }, \"敏感词总数\", -1 /* CACHED */))])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"stat-card\",\n        shadow: \"hover\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Filter)]),\n          _: 1 /* STABLE */\n        })]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString($setup.statistics.totalFilters || 0), 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"div\", {\n          class: \"stat-label\"\n        }, \"总过滤次数\", -1 /* CACHED */))])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"stat-card\",\n        shadow: \"hover\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_TrendCharts)]),\n          _: 1 /* STABLE */\n        })]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString($setup.statistics.todayFilters || 0), 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n          class: \"stat-label\"\n        }, \"今日过滤\", -1 /* CACHED */))])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"stat-card\",\n        shadow: \"hover\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Timer)]),\n          _: 1 /* STABLE */\n        })]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, _toDisplayString($setup.statistics.avgTime || 0) + \"ms\", 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n          class: \"stat-label\"\n        }, \"平均过滤时间\", -1 /* CACHED */))])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 图表区域 \"), _createVNode(_component_el_row, {\n    gutter: 20,\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"chart-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_18, [_cache[5] || (_cache[5] = _createElementVNode(\"span\", null, \"过滤趋势\", -1 /* CACHED */)), _createVNode(_component_el_select, {\n          modelValue: $setup.trendPeriod,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.trendPeriod = $event),\n          size: \"small\",\n          onChange: $setup.loadTrendData\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_option, {\n            label: \"最近7天\",\n            value: \"7\"\n          }), _createVNode(_component_el_option, {\n            label: \"最近30天\",\n            value: \"30\"\n          }), _createVNode(_component_el_option, {\n            label: \"最近90天\",\n            value: \"90\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_19, [_createVNode(_component_v_chart, {\n          option: $setup.trendOption,\n          style: {\n            \"height\": \"300px\"\n          }\n        }, null, 8 /* PROPS */, [\"option\"])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"chart-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"span\", null, \"敏感词分类统计\")], -1 /* CACHED */)])),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_v_chart, {\n          option: $setup.categoryOption,\n          style: {\n            \"height\": \"300px\"\n          }\n        }, null, 8 /* PROPS */, [\"option\"])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_row, {\n    gutter: 20,\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"chart-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => _cache[7] || (_cache[7] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"span\", null, \"敏感词级别分布\")], -1 /* CACHED */)])),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_21, [_createVNode(_component_v_chart, {\n          option: $setup.levelOption,\n          style: {\n            \"height\": \"300px\"\n          }\n        }, null, 8 /* PROPS */, [\"option\"])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"chart-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"span\", null, \"过滤时间分布\")], -1 /* CACHED */)])),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_22, [_createVNode(_component_v_chart, {\n          option: $setup.timeOption,\n          style: {\n            \"height\": \"300px\"\n          }\n        }, null, 8 /* PROPS */, [\"option\"])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 热门敏感词 \"), _createVNode(_component_el_row, {\n    gutter: 20,\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"hot-words-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => _cache[9] || (_cache[9] = [_createElementVNode(\"div\", {\n          class: \"card-header\"\n        }, [_createElementVNode(\"span\", null, \"热门敏感词排行\")], -1 /* CACHED */)])),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          data: $setup.hotWords,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"rank\",\n            label: \"排名\",\n            width: \"80\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: $setup.getRankTagType(scope.row.rank)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.rank), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"word\",\n            label: \"敏感词\",\n            width: \"150\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"category\",\n            label: \"分类\",\n            width: \"120\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: $setup.getCategoryTagType(scope.row.category)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(scope.row.category), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"level\",\n            label: \"级别\",\n            width: \"100\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_tag, {\n              type: $setup.getLevelTagType(scope.row.level)\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getLevelText(scope.row.level)), 1 /* TEXT */)]),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"count\",\n            label: \"出现次数\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"percentage\",\n            label: \"占比\",\n            width: \"120\"\n          }, {\n            default: _withCtx(scope => [_createVNode(_component_el_progress, {\n              percentage: scope.row.percentage,\n              \"stroke-width\": 8\n            }, null, 8 /* PROPS */, [\"percentage\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_el_row","gutter","_component_el_col","span","_component_el_card","shadow","_createElementVNode","_hoisted_2","_hoisted_3","_component_el_icon","_component_Document","_hoisted_4","_hoisted_5","_toDisplayString","$setup","statistics","totalWords","_hoisted_6","_hoisted_7","_component_Filter","_hoisted_8","_hoisted_9","totalFilters","_hoisted_10","_hoisted_11","_component_TrendCharts","_hoisted_12","_hoisted_13","todayFilters","_hoisted_14","_hoisted_15","_component_Timer","_hoisted_16","_hoisted_17","avgTime","style","header","_withCtx","_hoisted_18","_component_el_select","trendPeriod","$event","size","onChange","loadTrendData","_component_el_option","label","value","_hoisted_19","_component_v_chart","option","trendOption","_cache","_hoisted_20","categoryOption","_hoisted_21","levelOption","_hoisted_22","timeOption","_createBlock","_component_el_table","data","hotWords","_component_el_table_column","prop","width","default","scope","_component_el_tag","type","getRankTagType","row","rank","getCategoryTagType","category","getLevelTagType","level","getLevelText","_component_el_progress","percentage","loading"],"sources":["D:\\code\\sensitive-word-filter-system\\frontend\\src\\views\\Statistics.vue"],"sourcesContent":["<template>\r\n  <div class=\"statistics-page\">\r\n    <!-- 统计概览 -->\r\n    <el-row :gutter=\"20\">\r\n      <el-col :span=\"6\">\r\n        <el-card class=\"stat-card\" shadow=\"hover\">\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-icon\">\r\n              <el-icon><Document /></el-icon>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-number\">{{ statistics.totalWords || 0 }}</div>\r\n              <div class=\"stat-label\">敏感词总数</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card class=\"stat-card\" shadow=\"hover\">\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-icon\">\r\n              <el-icon><Filter /></el-icon>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-number\">{{ statistics.totalFilters || 0 }}</div>\r\n              <div class=\"stat-label\">总过滤次数</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card class=\"stat-card\" shadow=\"hover\">\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-icon\">\r\n              <el-icon><TrendCharts /></el-icon>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-number\">{{ statistics.todayFilters || 0 }}</div>\r\n              <div class=\"stat-label\">今日过滤</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card class=\"stat-card\" shadow=\"hover\">\r\n          <div class=\"stat-content\">\r\n            <div class=\"stat-icon\">\r\n              <el-icon><Timer /></el-icon>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-number\">{{ statistics.avgTime || 0 }}ms</div>\r\n              <div class=\"stat-label\">平均过滤时间</div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 图表区域 -->\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"chart-card\" shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>过滤趋势</span>\r\n              <el-select v-model=\"trendPeriod\" size=\"small\" @change=\"loadTrendData\">\r\n                <el-option label=\"最近7天\" value=\"7\" />\r\n                <el-option label=\"最近30天\" value=\"30\" />\r\n                <el-option label=\"最近90天\" value=\"90\" />\r\n              </el-select>\r\n            </div>\r\n          </template>\r\n          <div class=\"chart-container\">\r\n            <v-chart :option=\"trendOption\" style=\"height: 300px;\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <el-col :span=\"12\">\r\n        <el-card class=\"chart-card\" shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>敏感词分类统计</span>\r\n            </div>\r\n          </template>\r\n          <div class=\"chart-container\">\r\n            <v-chart :option=\"categoryOption\" style=\"height: 300px;\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\r\n      <el-col :span=\"12\">\r\n        <el-card class=\"chart-card\" shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>敏感词级别分布</span>\r\n            </div>\r\n          </template>\r\n          <div class=\"chart-container\">\r\n            <v-chart :option=\"levelOption\" style=\"height: 300px;\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <el-col :span=\"12\">\r\n        <el-card class=\"chart-card\" shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>过滤时间分布</span>\r\n            </div>\r\n          </template>\r\n          <div class=\"chart-container\">\r\n            <v-chart :option=\"timeOption\" style=\"height: 300px;\" />\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 热门敏感词 -->\r\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\r\n      <el-col :span=\"24\">\r\n        <el-card class=\"hot-words-card\" shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <span>热门敏感词排行</span>\r\n            </div>\r\n          </template>\r\n          <el-table :data=\"hotWords\" style=\"width: 100%\" v-loading=\"loading\">\r\n            <el-table-column prop=\"rank\" label=\"排名\" width=\"80\">\r\n              <template #default=\"scope\">\r\n                <el-tag :type=\"getRankTagType(scope.row.rank)\">\r\n                  {{ scope.row.rank }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"word\" label=\"敏感词\" width=\"150\" />\r\n            <el-table-column prop=\"category\" label=\"分类\" width=\"120\">\r\n              <template #default=\"scope\">\r\n                <el-tag :type=\"getCategoryTagType(scope.row.category)\">\r\n                  {{ scope.row.category }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"level\" label=\"级别\" width=\"100\">\r\n              <template #default=\"scope\">\r\n                <el-tag :type=\"getLevelTagType(scope.row.level)\">\r\n                  {{ getLevelText(scope.row.level) }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"count\" label=\"出现次数\" width=\"120\" />\r\n            <el-table-column prop=\"percentage\" label=\"占比\" width=\"120\">\r\n              <template #default=\"scope\">\r\n                <el-progress :percentage=\"scope.row.percentage\" :stroke-width=\"8\" />\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'\r\nimport { use } from 'echarts/core'\r\nimport { CanvasRenderer } from 'echarts/renderers'\r\nimport { LineChart, PieChart, BarChart } from 'echarts/charts'\r\nimport {\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  LegendComponent,\r\n  GridComponent\r\n} from 'echarts/components'\r\nimport VChart from 'vue-echarts'\r\n\r\nuse([\r\n  CanvasRenderer,\r\n  LineChart,\r\n  PieChart,\r\n  BarChart,\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  LegendComponent,\r\n  GridComponent\r\n])\r\n\r\nexport default {\r\n  name: 'Statistics',\r\n  components: {\r\n    VChart\r\n  },\r\n  setup() {\r\n    const loading = ref(false)\r\n    const trendPeriod = ref('7')\r\n    const statistics = ref({})\r\n    const hotWords = ref([])\r\n\r\n    // 过滤趋势图表配置\r\n    const trendOption = ref({\r\n      title: {\r\n        text: '过滤趋势',\r\n        left: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: []\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [\r\n        {\r\n          name: '过滤次数',\r\n          type: 'line',\r\n          data: [],\r\n          smooth: true,\r\n          itemStyle: {\r\n            color: '#409EFF'\r\n          }\r\n        }\r\n      ]\r\n    })\r\n\r\n    // 分类统计图表配置\r\n    const categoryOption = ref({\r\n      title: {\r\n        text: '敏感词分类统计',\r\n        left: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left'\r\n      },\r\n      series: [\r\n        {\r\n          name: '分类',\r\n          type: 'pie',\r\n          radius: '50%',\r\n          data: [\r\n            { value: 10, name: '侮辱' },\r\n            { value: 8, name: '政治' },\r\n            { value: 10, name: '违法' }\r\n          ]\r\n        }\r\n      ]\r\n    })\r\n\r\n    // 级别分布图表配置\r\n    const levelOption = ref({\r\n      title: {\r\n        text: '敏感词级别分布',\r\n        left: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left'\r\n      },\r\n      series: [\r\n        {\r\n          name: '级别',\r\n          type: 'pie',\r\n          radius: '50%',\r\n          data: [\r\n            { value: 15, name: '低' },\r\n            { value: 8, name: '中' },\r\n            { value: 5, name: '高' }\r\n          ]\r\n        }\r\n      ]\r\n    })\r\n\r\n    // 过滤时间分布图表配置\r\n    const timeOption = ref({\r\n      title: {\r\n        text: '过滤时间分布',\r\n        left: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'axis'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: ['0-10ms', '10-50ms', '50-100ms', '100-500ms', '500ms+']\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [\r\n        {\r\n          name: '次数',\r\n          type: 'bar',\r\n          data: [120, 80, 45, 25, 10],\r\n          itemStyle: {\r\n            color: '#67C23A'\r\n          }\r\n        }\r\n      ]\r\n    })\r\n\r\n    // 加载统计数据\r\n    const loadStatistics = () => {\r\n      // 模拟统计数据\r\n      statistics.value = {\r\n        totalWords: 28,\r\n        totalFilters: 1250,\r\n        todayFilters: 45,\r\n        avgTime: 12\r\n      }\r\n    }\r\n\r\n    // 加载趋势数据\r\n    const loadTrendData = () => {\r\n      // 模拟趋势数据\r\n      const days = []\r\n      const data = []\r\n      const period = parseInt(trendPeriod.value)\r\n      \r\n      for (let i = period - 1; i >= 0; i--) {\r\n        const date = new Date()\r\n        date.setDate(date.getDate() - i)\r\n        days.push(date.toLocaleDateString())\r\n        data.push(Math.floor(Math.random() * 50) + 10)\r\n      }\r\n      \r\n      trendOption.value.xAxis.data = days\r\n      trendOption.value.series[0].data = data\r\n    }\r\n\r\n    // 加载热门敏感词\r\n    const loadHotWords = () => {\r\n      hotWords.value = [\r\n        { rank: 1, word: '傻逼', category: '侮辱', level: 3, count: 45, percentage: 15 },\r\n        { rank: 2, word: '混蛋', category: '侮辱', level: 2, count: 38, percentage: 12 },\r\n        { rank: 3, word: '赌博', category: '违法', level: 2, count: 32, percentage: 10 },\r\n        { rank: 4, word: '毒品', category: '违法', level: 3, count: 28, percentage: 9 },\r\n        { rank: 5, word: '色情', category: '违法', level: 3, count: 25, percentage: 8 }\r\n      ]\r\n    }\r\n\r\n    // 工具函数\r\n    const getRankTagType = (rank) => {\r\n      if (rank <= 3) return 'danger'\r\n      if (rank <= 10) return 'warning'\r\n      return 'info'\r\n    }\r\n\r\n    const getCategoryTagType = (category) => {\r\n      const types = {\r\n        '侮辱': 'danger',\r\n        '政治': 'warning',\r\n        '违法': 'error'\r\n      }\r\n      return types[category] || 'info'\r\n    }\r\n\r\n    const getLevelTagType = (level) => {\r\n      const types = {\r\n        1: 'success',\r\n        2: 'warning',\r\n        3: 'danger'\r\n      }\r\n      return types[level] || 'info'\r\n    }\r\n\r\n    const getLevelText = (level) => {\r\n      const texts = {\r\n        1: '低',\r\n        2: '中',\r\n        3: '高'\r\n      }\r\n      return texts[level] || '未知'\r\n    }\r\n\r\n    onMounted(() => {\r\n      loadStatistics()\r\n      loadTrendData()\r\n      loadHotWords()\r\n    })\r\n\r\n    return {\r\n      loading,\r\n      trendPeriod,\r\n      statistics,\r\n      hotWords,\r\n      trendOption,\r\n      categoryOption,\r\n      levelOption,\r\n      timeOption,\r\n      loadTrendData,\r\n      getRankTagType,\r\n      getCategoryTagType,\r\n      getLevelTagType,\r\n      getLevelText\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.statistics-page {\r\n  padding: 20px;\r\n}\r\n\r\n.stat-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.stat-content {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\r\n\r\n.stat-icon {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n}\r\n\r\n.stat-icon .el-icon {\r\n  font-size: 30px;\r\n  color: white;\r\n}\r\n\r\n.stat-info {\r\n  flex: 1;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #909399;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.chart-container {\r\n  padding: 10px;\r\n}\r\n\r\n.hot-words-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .stat-content {\r\n    flex-direction: column;\r\n    text-align: center;\r\n  }\r\n  \r\n  .stat-icon {\r\n    margin-right: 0;\r\n    margin-bottom: 15px;\r\n  }\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAKfA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAW;;EAGjBA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAa;;EAQvBA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAW;;EAGjBA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAa;;EAQvBA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAW;;EAGjBA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAa;;EAQvBA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAW;;EAGjBA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAa;;EAarBA,KAAK,EAAC;AAAa;;EASrBA,KAAK,EAAC;AAAiB;;EAavBA,KAAK,EAAC;AAAiB;;EAevBA,KAAK,EAAC;AAAiB;;EAavBA,KAAK,EAAC;AAAiB;;;;;;;;;;;;;;;;;;uBAhHpCC,mBAAA,CAiKM,OAjKNC,UAiKM,GAhKJC,mBAAA,UAAa,EACbC,YAAA,CAqDSC,iBAAA;IArDAC,MAAM,EAAE;EAAE;sBACjB,MAYS,CAZTF,YAAA,CAYSG,iBAAA;MAZAC,IAAI,EAAE;IAAC;wBACd,MAUU,CAVVJ,YAAA,CAUUK,kBAAA;QAVDT,KAAK,EAAC,WAAW;QAACU,MAAM,EAAC;;0BAChC,MAQM,CARNC,mBAAA,CAQM,OARNC,UAQM,GAPJD,mBAAA,CAEM,OAFNE,UAEM,GADJT,YAAA,CAA+BU,kBAAA;4BAAtB,MAAY,CAAZV,YAAA,CAAYW,mBAAA,E;;cAEvBJ,mBAAA,CAGM,OAHNK,UAGM,GAFJL,mBAAA,CAA+D,OAA/DM,UAA+D,EAAAC,gBAAA,CAAnCC,MAAA,CAAAC,UAAU,CAACC,UAAU,uB,0BACjDV,mBAAA,CAAmC;UAA9BX,KAAK,EAAC;QAAY,GAAC,OAAK,oB;;;;QAKrCI,YAAA,CAYSG,iBAAA;MAZAC,IAAI,EAAE;IAAC;wBACd,MAUU,CAVVJ,YAAA,CAUUK,kBAAA;QAVDT,KAAK,EAAC,WAAW;QAACU,MAAM,EAAC;;0BAChC,MAQM,CARNC,mBAAA,CAQM,OARNW,UAQM,GAPJX,mBAAA,CAEM,OAFNY,UAEM,GADJnB,YAAA,CAA6BU,kBAAA;4BAApB,MAAU,CAAVV,YAAA,CAAUoB,iBAAA,E;;cAErBb,mBAAA,CAGM,OAHNc,UAGM,GAFJd,mBAAA,CAAiE,OAAjEe,UAAiE,EAAAR,gBAAA,CAArCC,MAAA,CAAAC,UAAU,CAACO,YAAY,uB,0BACnDhB,mBAAA,CAAmC;UAA9BX,KAAK,EAAC;QAAY,GAAC,OAAK,oB;;;;QAKrCI,YAAA,CAYSG,iBAAA;MAZAC,IAAI,EAAE;IAAC;wBACd,MAUU,CAVVJ,YAAA,CAUUK,kBAAA;QAVDT,KAAK,EAAC,WAAW;QAACU,MAAM,EAAC;;0BAChC,MAQM,CARNC,mBAAA,CAQM,OARNiB,WAQM,GAPJjB,mBAAA,CAEM,OAFNkB,WAEM,GADJzB,YAAA,CAAkCU,kBAAA;4BAAzB,MAAe,CAAfV,YAAA,CAAe0B,sBAAA,E;;cAE1BnB,mBAAA,CAGM,OAHNoB,WAGM,GAFJpB,mBAAA,CAAiE,OAAjEqB,WAAiE,EAAAd,gBAAA,CAArCC,MAAA,CAAAC,UAAU,CAACa,YAAY,uB,0BACnDtB,mBAAA,CAAkC;UAA7BX,KAAK,EAAC;QAAY,GAAC,MAAI,oB;;;;QAKpCI,YAAA,CAYSG,iBAAA;MAZAC,IAAI,EAAE;IAAC;wBACd,MAUU,CAVVJ,YAAA,CAUUK,kBAAA;QAVDT,KAAK,EAAC,WAAW;QAACU,MAAM,EAAC;;0BAChC,MAQM,CARNC,mBAAA,CAQM,OARNuB,WAQM,GAPJvB,mBAAA,CAEM,OAFNwB,WAEM,GADJ/B,YAAA,CAA4BU,kBAAA;4BAAnB,MAAS,CAATV,YAAA,CAASgC,gBAAA,E;;cAEpBzB,mBAAA,CAGM,OAHN0B,WAGM,GAFJ1B,mBAAA,CAA8D,OAA9D2B,WAA8D,EAAApB,gBAAA,CAAlCC,MAAA,CAAAC,UAAU,CAACmB,OAAO,SAAQ,IAAE,iB,0BACxD5B,mBAAA,CAAoC;UAA/BX,KAAK,EAAC;QAAY,GAAC,QAAM,oB;;;;;;MAOxCG,mBAAA,UAAa,EACbC,YAAA,CA+BSC,iBAAA;IA/BAC,MAAM,EAAE,EAAE;IAAEkC,KAAyB,EAAzB;MAAA;IAAA;;sBACnB,MAgBS,CAhBTpC,YAAA,CAgBSG,iBAAA;MAhBAC,IAAI,EAAE;IAAE;wBACf,MAcU,CAdVJ,YAAA,CAcUK,kBAAA;QAdDT,KAAK,EAAC,YAAY;QAACU,MAAM,EAAC;;QACtB+B,MAAM,EAAAC,QAAA,CACf,MAOM,CAPN/B,mBAAA,CAOM,OAPNgC,WAOM,G,0BANJhC,mBAAA,CAAiB,cAAX,MAAI,qBACVP,YAAA,CAIYwC,oBAAA;sBAJQzB,MAAA,CAAA0B,WAAW;qEAAX1B,MAAA,CAAA0B,WAAW,GAAAC,MAAA;UAAEC,IAAI,EAAC,OAAO;UAAEC,QAAM,EAAE7B,MAAA,CAAA8B;;4BACrD,MAAoC,CAApC7C,YAAA,CAAoC8C,oBAAA;YAAzBC,KAAK,EAAC,MAAM;YAACC,KAAK,EAAC;cAC9BhD,YAAA,CAAsC8C,oBAAA;YAA3BC,KAAK,EAAC,OAAO;YAACC,KAAK,EAAC;cAC/BhD,YAAA,CAAsC8C,oBAAA;YAA3BC,KAAK,EAAC,OAAO;YAACC,KAAK,EAAC;;;;0BAIrC,MAEM,CAFNzC,mBAAA,CAEM,OAFN0C,WAEM,GADJjD,YAAA,CAAwDkD,kBAAA;UAA9CC,MAAM,EAAEpC,MAAA,CAAAqC,WAAW;UAAEhB,KAAsB,EAAtB;YAAA;UAAA;;;;;QAKrCpC,YAAA,CAWSG,iBAAA;MAXAC,IAAI,EAAE;IAAE;wBACf,MASU,CATVJ,YAAA,CASUK,kBAAA;QATDT,KAAK,EAAC,YAAY;QAACU,MAAM,EAAC;;QACtB+B,MAAM,EAAAC,QAAA,CACf,MAEMe,MAAA,QAAAA,MAAA,OAFN9C,mBAAA,CAEM;UAFDX,KAAK,EAAC;QAAa,IACtBW,mBAAA,CAAoB,cAAd,SAAO,E;0BAGjB,MAEM,CAFNA,mBAAA,CAEM,OAFN+C,WAEM,GADJtD,YAAA,CAA2DkD,kBAAA;UAAjDC,MAAM,EAAEpC,MAAA,CAAAwC,cAAc;UAAEnB,KAAsB,EAAtB;YAAA;UAAA;;;;;;;MAM1CpC,YAAA,CA0BSC,iBAAA;IA1BAC,MAAM,EAAE,EAAE;IAAEkC,KAAyB,EAAzB;MAAA;IAAA;;sBACnB,MAWS,CAXTpC,YAAA,CAWSG,iBAAA;MAXAC,IAAI,EAAE;IAAE;wBACf,MASU,CATVJ,YAAA,CASUK,kBAAA;QATDT,KAAK,EAAC,YAAY;QAACU,MAAM,EAAC;;QACtB+B,MAAM,EAAAC,QAAA,CACf,MAEMe,MAAA,QAAAA,MAAA,OAFN9C,mBAAA,CAEM;UAFDX,KAAK,EAAC;QAAa,IACtBW,mBAAA,CAAoB,cAAd,SAAO,E;0BAGjB,MAEM,CAFNA,mBAAA,CAEM,OAFNiD,WAEM,GADJxD,YAAA,CAAwDkD,kBAAA;UAA9CC,MAAM,EAAEpC,MAAA,CAAA0C,WAAW;UAAErB,KAAsB,EAAtB;YAAA;UAAA;;;;;QAKrCpC,YAAA,CAWSG,iBAAA;MAXAC,IAAI,EAAE;IAAE;wBACf,MASU,CATVJ,YAAA,CASUK,kBAAA;QATDT,KAAK,EAAC,YAAY;QAACU,MAAM,EAAC;;QACtB+B,MAAM,EAAAC,QAAA,CACf,MAEMe,MAAA,QAAAA,MAAA,OAFN9C,mBAAA,CAEM;UAFDX,KAAK,EAAC;QAAa,IACtBW,mBAAA,CAAmB,cAAb,QAAM,E;0BAGhB,MAEM,CAFNA,mBAAA,CAEM,OAFNmD,WAEM,GADJ1D,YAAA,CAAuDkD,kBAAA;UAA7CC,MAAM,EAAEpC,MAAA,CAAA4C,UAAU;UAAEvB,KAAsB,EAAtB;YAAA;UAAA;;;;;;;MAMtCrC,mBAAA,WAAc,EACdC,YAAA,CAwCSC,iBAAA;IAxCAC,MAAM,EAAE,EAAE;IAAEkC,KAAyB,EAAzB;MAAA;IAAA;;sBACnB,MAsCS,CAtCTpC,YAAA,CAsCSG,iBAAA;MAtCAC,IAAI,EAAE;IAAE;wBACf,MAoCU,CApCVJ,YAAA,CAoCUK,kBAAA;QApCDT,KAAK,EAAC,gBAAgB;QAACU,MAAM,EAAC;;QAC1B+B,MAAM,EAAAC,QAAA,CACf,MAEMe,MAAA,QAAAA,MAAA,OAFN9C,mBAAA,CAEM;UAFDX,KAAK,EAAC;QAAa,IACtBW,mBAAA,CAAoB,cAAd,SAAO,E;0BAGjB,MA6BW,C,+BA7BXqD,YAAA,CA6BWC,mBAAA;UA7BAC,IAAI,EAAE/C,MAAA,CAAAgD,QAAQ;UAAE3B,KAAmB,EAAnB;YAAA;UAAA;;4BACzB,MAMkB,CANlBpC,YAAA,CAMkBgE,0BAAA;YANDC,IAAI,EAAC,MAAM;YAAClB,KAAK,EAAC,IAAI;YAACmB,KAAK,EAAC;;YACjCC,OAAO,EAAA7B,QAAA,CAGP8B,KAHc,KACvBpE,YAAA,CAESqE,iBAAA;cAFAC,IAAI,EAAEvD,MAAA,CAAAwD,cAAc,CAACH,KAAK,CAACI,GAAG,CAACC,IAAI;;gCAC1C,MAAoB,C,kCAAjBL,KAAK,CAACI,GAAG,CAACC,IAAI,iB;;;;cAIvBzE,YAAA,CAAuDgE,0BAAA;YAAtCC,IAAI,EAAC,MAAM;YAAClB,KAAK,EAAC,KAAK;YAACmB,KAAK,EAAC;cAC/ClE,YAAA,CAMkBgE,0BAAA;YANDC,IAAI,EAAC,UAAU;YAAClB,KAAK,EAAC,IAAI;YAACmB,KAAK,EAAC;;YACrCC,OAAO,EAAA7B,QAAA,CAGP8B,KAHc,KACvBpE,YAAA,CAESqE,iBAAA;cAFAC,IAAI,EAAEvD,MAAA,CAAA2D,kBAAkB,CAACN,KAAK,CAACI,GAAG,CAACG,QAAQ;;gCAClD,MAAwB,C,kCAArBP,KAAK,CAACI,GAAG,CAACG,QAAQ,iB;;;;cAI3B3E,YAAA,CAMkBgE,0BAAA;YANDC,IAAI,EAAC,OAAO;YAAClB,KAAK,EAAC,IAAI;YAACmB,KAAK,EAAC;;YAClCC,OAAO,EAAA7B,QAAA,CAGP8B,KAHc,KACvBpE,YAAA,CAESqE,iBAAA;cAFAC,IAAI,EAAEvD,MAAA,CAAA6D,eAAe,CAACR,KAAK,CAACI,GAAG,CAACK,KAAK;;gCAC5C,MAAmC,C,kCAAhC9D,MAAA,CAAA+D,YAAY,CAACV,KAAK,CAACI,GAAG,CAACK,KAAK,kB;;;;cAIrC7E,YAAA,CAAyDgE,0BAAA;YAAxCC,IAAI,EAAC,OAAO;YAAClB,KAAK,EAAC,MAAM;YAACmB,KAAK,EAAC;cACjDlE,YAAA,CAIkBgE,0BAAA;YAJDC,IAAI,EAAC,YAAY;YAAClB,KAAK,EAAC,IAAI;YAACmB,KAAK,EAAC;;YACvCC,OAAO,EAAA7B,QAAA,CACoD8B,KAD7C,KACvBpE,YAAA,CAAoE+E,sBAAA;cAAtDC,UAAU,EAAEZ,KAAK,CAACI,GAAG,CAACQ,UAAU;cAAG,cAAY,EAAE;;;;;4DA1BXjE,MAAA,CAAAkE,OAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}