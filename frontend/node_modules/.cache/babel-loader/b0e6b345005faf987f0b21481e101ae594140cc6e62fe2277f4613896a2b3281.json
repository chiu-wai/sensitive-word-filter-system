{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  class: \"stat-item\"\n};\nconst _hoisted_4 = {\n  class: \"stat-number\"\n};\nconst _hoisted_5 = {\n  class: \"stat-item\"\n};\nconst _hoisted_6 = {\n  class: \"stat-number\"\n};\nconst _hoisted_7 = {\n  class: \"stat-item\"\n};\nconst _hoisted_8 = {\n  class: \"stat-number\"\n};\nconst _hoisted_9 = {\n  class: \"stat-item\"\n};\nconst _hoisted_10 = {\n  class: \"stat-number\"\n};\nconst _hoisted_11 = {\n  class: \"card-header\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"filter-result\"\n};\nconst _hoisted_13 = {\n  class: \"result-item\"\n};\nconst _hoisted_14 = {\n  class: \"text-content\"\n};\nconst _hoisted_15 = {\n  class: \"result-item\"\n};\nconst _hoisted_16 = {\n  class: \"text-content filtered\"\n};\nconst _hoisted_17 = {\n  class: \"result-item\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  style: {\n    \"color\": \"#67c23a\"\n  }\n};\nconst _hoisted_19 = {\n  class: \"result-item\"\n};\nconst _hoisted_20 = {\n  class: \"card-header\"\n};\nconst _hoisted_21 = {\n  class: \"features-grid\"\n};\nconst _hoisted_22 = {\n  class: \"card-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_DataBoard = _resolveComponent(\"DataBoard\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_Filter = _resolveComponent(\"Filter\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_Search = _resolveComponent(\"Search\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_divider = _resolveComponent(\"el-divider\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_Grid = _resolveComponent(\"Grid\");\n  const _component_Document = _resolveComponent(\"Document\");\n  const _component_List = _resolveComponent(\"List\");\n  const _component_TrendCharts = _resolveComponent(\"TrendCharts\");\n  const _component_Clock = _resolveComponent(\"Clock\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 系统概览卡片 \"), _createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"overview-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_DataBoard)]),\n          _: 1 /* STABLE */\n        }), _cache[6] || (_cache[6] = _createElementVNode(\"span\", null, \"系统概览\", -1 /* CACHED */))])]),\n        default: _withCtx(() => [_createVNode(_component_el_row, {\n          gutter: 20\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($setup.statistics.sensitiveWordCount || 0), 1 /* TEXT */), _cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n              class: \"stat-label\"\n            }, \"敏感词总数\", -1 /* CACHED */))])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString($setup.statistics.filterCount || 0), 1 /* TEXT */), _cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n              class: \"stat-label\"\n            }, \"过滤次数\", -1 /* CACHED */))])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, _toDisplayString($setup.statistics.todayFilterCount || 0), 1 /* TEXT */), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n              class: \"stat-label\"\n            }, \"今日过滤\", -1 /* CACHED */))])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_col, {\n            span: 6\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString($setup.statistics.avgFilterTime || 0) + \"ms\", 1 /* TEXT */), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n              class: \"stat-label\"\n            }, \"平均过滤时间\", -1 /* CACHED */))])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_row, {\n    gutter: 20,\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 快速过滤 \"), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"quick-filter-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Filter)]),\n          _: 1 /* STABLE */\n        }), _cache[11] || (_cache[11] = _createElementVNode(\"span\", null, \"快速过滤\", -1 /* CACHED */))])]),\n        default: _withCtx(() => [_createVNode(_component_el_form, {\n          onSubmit: _withModifiers($setup.handleQuickFilter, [\"prevent\"])\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_input, {\n              modelValue: $setup.quickFilterText,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.quickFilterText = $event),\n              type: \"textarea\",\n              rows: 6,\n              placeholder: \"请输入要过滤的文本内容...\",\n              disabled: $setup.loading\n            }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            default: _withCtx(() => [_createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: $setup.handleQuickFilter,\n              loading: $setup.loading\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                default: _withCtx(() => [_createVNode(_component_Filter)]),\n                _: 1 /* STABLE */\n              }), _cache[12] || (_cache[12] = _createTextVNode(\" 开始过滤 \", -1 /* CACHED */))]),\n              _: 1 /* STABLE */,\n              __: [12]\n            }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n              onClick: $setup.handleQuickCheck,\n              loading: $setup.loading\n            }, {\n              default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n                default: _withCtx(() => [_createVNode(_component_Search)]),\n                _: 1 /* STABLE */\n              }), _cache[13] || (_cache[13] = _createTextVNode(\" 仅检测 \", -1 /* CACHED */))]),\n              _: 1 /* STABLE */,\n              __: [13]\n            }, 8 /* PROPS */, [\"onClick\", \"loading\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onSubmit\"]), $setup.filterResult ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createVNode(_component_el_divider, {\n          \"content-position\": \"left\"\n        }, {\n          default: _withCtx(() => _cache[14] || (_cache[14] = [_createTextVNode(\"过滤结果\", -1 /* CACHED */)])),\n          _: 1 /* STABLE */,\n          __: [14]\n        }), _createElementVNode(\"div\", _hoisted_13, [_cache[15] || (_cache[15] = _createElementVNode(\"strong\", null, \"原始文本：\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_14, _toDisplayString($setup.filterResult.originalText), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_15, [_cache[16] || (_cache[16] = _createElementVNode(\"strong\", null, \"过滤后文本：\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_16, _toDisplayString($setup.filterResult.filteredText), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_17, [_cache[17] || (_cache[17] = _createElementVNode(\"strong\", null, \"检测到的敏感词：\", -1 /* CACHED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filterResult.sensitiveWords, word => {\n          return _openBlock(), _createBlock(_component_el_tag, {\n            key: word,\n            type: \"danger\",\n            style: {\n              \"margin-right\": \"5px\"\n            }\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(word), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */)), $setup.filterResult.sensitiveWords.length === 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_18, \" 未检测到敏感词 \")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_19, [_cache[18] || (_cache[18] = _createElementVNode(\"strong\", null, \"过滤时间：\", -1 /* CACHED */)), _createElementVNode(\"span\", null, _toDisplayString($setup.filterResult.filterTime) + \"ms\", 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" 系统功能 \"), _createVNode(_component_el_col, {\n      span: 12\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"features-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Grid)]),\n          _: 1 /* STABLE */\n        }), _cache[19] || (_cache[19] = _createElementVNode(\"span\", null, \"系统功能\", -1 /* CACHED */))])]),\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"div\", {\n          class: \"feature-item\",\n          onClick: _cache[1] || (_cache[1] = $event => _ctx.$router.push('/filter'))\n        }, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Filter)]),\n          _: 1 /* STABLE */\n        }), _cache[20] || (_cache[20] = _createElementVNode(\"h3\", null, \"文本过滤\", -1 /* CACHED */)), _cache[21] || (_cache[21] = _createElementVNode(\"p\", null, \"实时过滤文本中的敏感词，支持批量处理\", -1 /* CACHED */))]), _createElementVNode(\"div\", {\n          class: \"feature-item\",\n          onClick: _cache[2] || (_cache[2] = $event => _ctx.$router.push('/words'))\n        }, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Document)]),\n          _: 1 /* STABLE */\n        }), _cache[22] || (_cache[22] = _createElementVNode(\"h3\", null, \"敏感词管理\", -1 /* CACHED */)), _cache[23] || (_cache[23] = _createElementVNode(\"p\", null, \"添加、编辑、删除敏感词，支持分类管理\", -1 /* CACHED */))]), _createElementVNode(\"div\", {\n          class: \"feature-item\",\n          onClick: _cache[3] || (_cache[3] = $event => _ctx.$router.push('/records'))\n        }, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_List)]),\n          _: 1 /* STABLE */\n        }), _cache[24] || (_cache[24] = _createElementVNode(\"h3\", null, \"过滤记录\", -1 /* CACHED */)), _cache[25] || (_cache[25] = _createElementVNode(\"p\", null, \"查看历史过滤记录，支持按条件筛选\", -1 /* CACHED */))]), _createElementVNode(\"div\", {\n          class: \"feature-item\",\n          onClick: _cache[4] || (_cache[4] = $event => _ctx.$router.push('/statistics'))\n        }, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_TrendCharts)]),\n          _: 1 /* STABLE */\n        }), _cache[26] || (_cache[26] = _createElementVNode(\"h3\", null, \"统计分析\", -1 /* CACHED */)), _cache[27] || (_cache[27] = _createElementVNode(\"p\", null, \"查看过滤统计数据和趋势分析\", -1 /* CACHED */))])])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_row, {\n    gutter: 20,\n    style: {\n      \"margin-top\": \"20px\"\n    }\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" 最近过滤记录 \"), _createVNode(_component_el_col, {\n      span: 24\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_card, {\n        class: \"recent-records-card\",\n        shadow: \"hover\"\n      }, {\n        header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_22, [_createVNode(_component_el_icon, null, {\n          default: _withCtx(() => [_createVNode(_component_Clock)]),\n          _: 1 /* STABLE */\n        }), _cache[29] || (_cache[29] = _createElementVNode(\"span\", null, \"最近过滤记录\", -1 /* CACHED */)), _createVNode(_component_el_button, {\n          type: \"text\",\n          onClick: _cache[5] || (_cache[5] = $event => _ctx.$router.push('/records')),\n          style: {\n            \"margin-left\": \"auto\"\n          }\n        }, {\n          default: _withCtx(() => _cache[28] || (_cache[28] = [_createTextVNode(\" 查看更多 \", -1 /* CACHED */)])),\n          _: 1 /* STABLE */,\n          __: [28]\n        })])]),\n        default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n          data: $setup.recentRecords,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_table_column, {\n            prop: \"createTime\",\n            label: \"时间\",\n            width: \"180\"\n          }, {\n            default: _withCtx(scope => [_createTextVNode(_toDisplayString($setup.formatTime(scope.row.createTime)), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"originalText\",\n            label: \"原始文本\",\n            \"show-overflow-tooltip\": \"\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"filteredText\",\n            label: \"过滤后文本\",\n            \"show-overflow-tooltip\": \"\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"filterCount\",\n            label: \"敏感词数量\",\n            width: \"100\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"ipAddress\",\n            label: \"IP地址\",\n            width: \"120\"\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_row","gutter","_createCommentVNode","_component_el_col","span","_component_el_card","shadow","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_icon","_component_DataBoard","_hoisted_3","_hoisted_4","_toDisplayString","$setup","statistics","sensitiveWordCount","_hoisted_5","_hoisted_6","filterCount","_hoisted_7","_hoisted_8","todayFilterCount","_hoisted_9","_hoisted_10","avgFilterTime","_hoisted_11","_component_Filter","_component_el_form","onSubmit","_withModifiers","handleQuickFilter","_component_el_form_item","_component_el_input","quickFilterText","$event","type","rows","placeholder","disabled","loading","_component_el_button","onClick","handleQuickCheck","_component_Search","filterResult","_hoisted_12","_component_el_divider","_cache","_hoisted_13","_hoisted_14","originalText","_hoisted_15","_hoisted_16","filteredText","_hoisted_17","_Fragment","_renderList","sensitiveWords","word","_createBlock","_component_el_tag","key","length","_hoisted_18","_hoisted_19","filterTime","_hoisted_20","_component_Grid","_hoisted_21","_ctx","$router","push","_component_Document","_component_List","_component_TrendCharts","_hoisted_22","_component_Clock","_component_el_table","data","recentRecords","_component_el_table_column","prop","label","width","default","scope","formatTime","row","createTime"],"sources":["D:\\code\\sensitive-word-filter-system\\frontend\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <el-row :gutter=\"20\">\n      <!-- 系统概览卡片 -->\n      <el-col :span=\"24\">\n        <el-card class=\"overview-card\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header\">\n              <el-icon><DataBoard /></el-icon>\n              <span>系统概览</span>\n            </div>\n          </template>\n          <el-row :gutter=\"20\">\n            <el-col :span=\"6\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">{{ statistics.sensitiveWordCount || 0 }}</div>\n                <div class=\"stat-label\">敏感词总数</div>\n              </div>\n            </el-col>\n            <el-col :span=\"6\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">{{ statistics.filterCount || 0 }}</div>\n                <div class=\"stat-label\">过滤次数</div>\n              </div>\n            </el-col>\n            <el-col :span=\"6\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">{{ statistics.todayFilterCount || 0 }}</div>\n                <div class=\"stat-label\">今日过滤</div>\n              </div>\n            </el-col>\n            <el-col :span=\"6\">\n              <div class=\"stat-item\">\n                <div class=\"stat-number\">{{ statistics.avgFilterTime || 0 }}ms</div>\n                <div class=\"stat-label\">平均过滤时间</div>\n              </div>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <!-- 快速过滤 -->\n      <el-col :span=\"12\">\n        <el-card class=\"quick-filter-card\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header\">\n              <el-icon><Filter /></el-icon>\n              <span>快速过滤</span>\n            </div>\n          </template>\n          <el-form @submit.prevent=\"handleQuickFilter\">\n            <el-form-item>\n              <el-input\n                v-model=\"quickFilterText\"\n                type=\"textarea\"\n                :rows=\"6\"\n                placeholder=\"请输入要过滤的文本内容...\"\n                :disabled=\"loading\"\n              />\n            </el-form-item>\n            <el-form-item>\n              <el-button type=\"primary\" @click=\"handleQuickFilter\" :loading=\"loading\">\n                <el-icon><Filter /></el-icon>\n                开始过滤\n              </el-button>\n              <el-button @click=\"handleQuickCheck\" :loading=\"loading\">\n                <el-icon><Search /></el-icon>\n                仅检测\n              </el-button>\n            </el-form-item>\n          </el-form>\n          \n          <!-- 过滤结果 -->\n          <div v-if=\"filterResult\" class=\"filter-result\">\n            <el-divider content-position=\"left\">过滤结果</el-divider>\n            <div class=\"result-item\">\n              <strong>原始文本：</strong>\n              <div class=\"text-content\">{{ filterResult.originalText }}</div>\n            </div>\n            <div class=\"result-item\">\n              <strong>过滤后文本：</strong>\n              <div class=\"text-content filtered\">{{ filterResult.filteredText }}</div>\n            </div>\n            <div class=\"result-item\">\n              <strong>检测到的敏感词：</strong>\n              <el-tag \n                v-for=\"word in filterResult.sensitiveWords\" \n                :key=\"word\" \n                type=\"danger\" \n                style=\"margin-right: 5px;\"\n              >\n                {{ word }}\n              </el-tag>\n              <span v-if=\"filterResult.sensitiveWords.length === 0\" style=\"color: #67c23a;\">\n                未检测到敏感词\n              </span>\n            </div>\n            <div class=\"result-item\">\n              <strong>过滤时间：</strong>\n              <span>{{ filterResult.filterTime }}ms</span>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n\n      <!-- 系统功能 -->\n      <el-col :span=\"12\">\n        <el-card class=\"features-card\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header\">\n              <el-icon><Grid /></el-icon>\n              <span>系统功能</span>\n            </div>\n          </template>\n          <div class=\"features-grid\">\n            <div class=\"feature-item\" @click=\"$router.push('/filter')\">\n              <el-icon><Filter /></el-icon>\n              <h3>文本过滤</h3>\n              <p>实时过滤文本中的敏感词，支持批量处理</p>\n            </div>\n            <div class=\"feature-item\" @click=\"$router.push('/words')\">\n              <el-icon><Document /></el-icon>\n              <h3>敏感词管理</h3>\n              <p>添加、编辑、删除敏感词，支持分类管理</p>\n            </div>\n            <div class=\"feature-item\" @click=\"$router.push('/records')\">\n              <el-icon><List /></el-icon>\n              <h3>过滤记录</h3>\n              <p>查看历史过滤记录，支持按条件筛选</p>\n            </div>\n            <div class=\"feature-item\" @click=\"$router.push('/statistics')\">\n              <el-icon><TrendCharts /></el-icon>\n              <h3>统计分析</h3>\n              <p>查看过滤统计数据和趋势分析</p>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\n      <!-- 最近过滤记录 -->\n      <el-col :span=\"24\">\n        <el-card class=\"recent-records-card\" shadow=\"hover\">\n          <template #header>\n            <div class=\"card-header\">\n              <el-icon><Clock /></el-icon>\n              <span>最近过滤记录</span>\n              <el-button \n                type=\"text\" \n                @click=\"$router.push('/records')\"\n                style=\"margin-left: auto;\"\n              >\n                查看更多\n              </el-button>\n            </div>\n          </template>\n          <el-table :data=\"recentRecords\" style=\"width: 100%\" v-loading=\"loading\">\n            <el-table-column prop=\"createTime\" label=\"时间\" width=\"180\">\n              <template #default=\"scope\">\n                {{ formatTime(scope.row.createTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column prop=\"originalText\" label=\"原始文本\" show-overflow-tooltip />\n            <el-table-column prop=\"filteredText\" label=\"过滤后文本\" show-overflow-tooltip />\n            <el-table-column prop=\"filterCount\" label=\"敏感词数量\" width=\"100\" />\n            <el-table-column prop=\"ipAddress\" label=\"IP地址\" width=\"120\" />\n          </el-table>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { filterApi } from '../utils/api'\n\nexport default {\n  name: 'Home',\n  setup() {\n    const store = useStore()\n    const loading = ref(false)\n    const quickFilterText = ref('')\n    const filterResult = ref(null)\n    const statistics = ref({})\n    const recentRecords = ref([])\n\n    // 快速过滤\n    const handleQuickFilter = async () => {\n      if (!quickFilterText.value.trim()) {\n        ElMessage.warning('请输入要过滤的文本')\n        return\n      }\n\n      loading.value = true\n      try {\n        const response = await filterApi.filterText(quickFilterText.value)\n        if (response.code === 200) {\n          filterResult.value = response.data\n          ElMessage.success('过滤完成')\n        } else {\n          ElMessage.error(response.message || '过滤失败')\n        }\n      } catch (error) {\n        ElMessage.error('过滤失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 快速检测\n    const handleQuickCheck = async () => {\n      if (!quickFilterText.value.trim()) {\n        ElMessage.warning('请输入要检测的文本')\n        return\n      }\n\n      loading.value = true\n      try {\n        const response = await filterApi.checkText(quickFilterText.value)\n        if (response.code === 200) {\n          const data = response.data\n          filterResult.value = {\n            originalText: quickFilterText.value,\n            filteredText: quickFilterText.value,\n            sensitiveWords: data.sensitiveWords,\n            filterTime: 0\n          }\n          ElMessage.success('检测完成')\n        } else {\n          ElMessage.error(response.message || '检测失败')\n        }\n      } catch (error) {\n        ElMessage.error('检测失败')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 格式化时间\n    const formatTime = (time) => {\n      if (!time) return ''\n      return new Date(time).toLocaleString()\n    }\n\n    // 加载数据\n    const loadData = async () => {\n      loading.value = true\n      try {\n        // 加载最近记录\n        const recordsResponse = await filterApi.getRecords(1, 5)\n        if (recordsResponse.data.code === 200) {\n          recentRecords.value = recordsResponse.data.data.list\n        }\n\n        // 模拟统计数据\n        statistics.value = {\n          sensitiveWordCount: 28,\n          filterCount: 1250,\n          todayFilterCount: 45,\n          avgFilterTime: 12\n        }\n      } catch (error) {\n        console.error('加载数据失败:', error)\n      } finally {\n        loading.value = false\n      }\n    }\n\n    onMounted(() => {\n      loadData()\n    })\n\n    return {\n      loading,\n      quickFilterText,\n      filterResult,\n      statistics,\n      recentRecords,\n      handleQuickFilter,\n      handleQuickCheck,\n      formatTime\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home {\n  padding: 20px;\n}\n\n.overview-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: bold;\n}\n\n.card-header .el-icon {\n  margin-right: 8px;\n  font-size: 18px;\n}\n\n.stat-item {\n  text-align: center;\n  padding: 20px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border-radius: 8px;\n  margin-bottom: 10px;\n}\n\n.stat-number {\n  font-size: 32px;\n  font-weight: bold;\n  margin-bottom: 8px;\n}\n\n.stat-label {\n  font-size: 14px;\n  opacity: 0.9;\n}\n\n.quick-filter-card,\n.features-card,\n.recent-records-card {\n  height: 100%;\n}\n\n.filter-result {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #f8f9fa;\n  border-radius: 6px;\n}\n\n.result-item {\n  margin-bottom: 10px;\n}\n\n.result-item strong {\n  display: inline-block;\n  width: 120px;\n  color: #606266;\n}\n\n.text-content {\n  margin-top: 5px;\n  padding: 10px;\n  background-color: white;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  min-height: 60px;\n  word-break: break-all;\n}\n\n.text-content.filtered {\n  color: #e6a23c;\n  font-weight: bold;\n}\n\n.features-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 15px;\n}\n\n.feature-item {\n  padding: 20px;\n  text-align: center;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.feature-item:hover {\n  background-color: #e3f2fd;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.feature-item .el-icon {\n  font-size: 32px;\n  color: #409eff;\n  margin-bottom: 10px;\n}\n\n.feature-item h3 {\n  margin: 10px 0;\n  color: #303133;\n}\n\n.feature-item p {\n  color: #606266;\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n@media (max-width: 768px) {\n  .features-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .stat-item {\n    margin-bottom: 15px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}