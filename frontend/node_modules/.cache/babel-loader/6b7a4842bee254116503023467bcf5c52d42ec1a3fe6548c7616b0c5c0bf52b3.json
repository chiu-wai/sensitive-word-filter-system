{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { sensitiveWordApi } from '../utils/api';\nexport default {\n  name: 'Words',\n  setup() {\n    const loading = ref(false);\n    const submitLoading = ref(false);\n    const batchSubmitLoading = ref(false);\n    const dialogVisible = ref(false);\n    const batchDialogVisible = ref(false);\n    const dialogTitle = ref('添加敏感词');\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const total = ref(0);\n    const searchCategory = ref('');\n    const searchLevel = ref('');\n    const sensitiveWords = ref([]);\n    const formRef = ref();\n\n    // 表单数据\n    const form = reactive({\n      id: null,\n      word: '',\n      category: 'default',\n      level: 1,\n      status: 1\n    });\n\n    // 批量添加数据\n    const batchWords = ref('');\n    const batchCategory = ref('default');\n    const batchLevel = ref(1);\n\n    // 表单验证规则\n    const rules = {\n      word: [{\n        required: true,\n        message: '请输入敏感词',\n        trigger: 'blur'\n      }],\n      category: [{\n        required: true,\n        message: '请选择分类',\n        trigger: 'change'\n      }],\n      level: [{\n        required: true,\n        message: '请选择级别',\n        trigger: 'change'\n      }]\n    };\n\n    // 加载敏感词列表\n    const loadSensitiveWords = async () => {\n      loading.value = true;\n      try {\n        const response = await sensitiveWordApi.getByPage(currentPage.value, pageSize.value);\n        if (response.data.code === 200) {\n          const data = response.data.data;\n          sensitiveWords.value = data.list;\n          total.value = data.total;\n        }\n      } catch (error) {\n        ElMessage.error('加载敏感词列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 显示添加对话框\n    const showAddDialog = () => {\n      dialogTitle.value = '添加敏感词';\n      dialogVisible.value = true;\n    };\n\n    // 显示编辑对话框\n    const showEditDialog = row => {\n      dialogTitle.value = '编辑敏感词';\n      Object.assign(form, row);\n      dialogVisible.value = true;\n    };\n\n    // 显示批量添加对话框\n    const showBatchAddDialog = () => {\n      batchDialogVisible.value = true;\n    };\n\n    // 提交表单\n    const handleSubmit = async () => {\n      if (!formRef.value) return;\n      await formRef.value.validate(async valid => {\n        if (valid) {\n          submitLoading.value = true;\n          try {\n            let response;\n            if (form.id) {\n              response = await sensitiveWordApi.update(form.id, form);\n            } else {\n              response = await sensitiveWordApi.add(form);\n            }\n            if (response.data.code === 200) {\n              ElMessage.success(form.id ? '更新成功' : '添加成功');\n              dialogVisible.value = false;\n              loadSensitiveWords();\n            } else {\n              ElMessage.error(response.data.message || '操作失败');\n            }\n          } catch (error) {\n            ElMessage.error('操作失败');\n          } finally {\n            submitLoading.value = false;\n          }\n        }\n      });\n    };\n\n    // 批量提交\n    const handleBatchSubmit = async () => {\n      if (!batchWords.value.trim()) {\n        ElMessage.warning('请输入敏感词');\n        return;\n      }\n      batchSubmitLoading.value = true;\n      try {\n        const words = batchWords.value.split('\\n').filter(word => word.trim());\n        const wordList = words.map(word => ({\n          word: word.trim(),\n          category: batchCategory.value,\n          level: batchLevel.value,\n          status: 1\n        }));\n        const response = await sensitiveWordApi.batchAdd(wordList);\n        if (response.data.code === 200) {\n          ElMessage.success(`批量添加成功，共 ${wordList.length} 个敏感词`);\n          batchDialogVisible.value = false;\n          batchWords.value = '';\n          loadSensitiveWords();\n        } else {\n          ElMessage.error(response.data.message || '批量添加失败');\n        }\n      } catch (error) {\n        ElMessage.error('批量添加失败');\n      } finally {\n        batchSubmitLoading.value = false;\n      }\n    };\n\n    // 删除敏感词\n    const handleDelete = async row => {\n      try {\n        await ElMessageBox.confirm(`确定要删除敏感词\"${row.word}\"吗？`, '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        const response = await sensitiveWordApi.delete(row.id);\n        if (response.data.code === 200) {\n          ElMessage.success('删除成功');\n          loadSensitiveWords();\n        } else {\n          ElMessage.error(response.data.message || '删除失败');\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          ElMessage.error('删除失败');\n        }\n      }\n    };\n\n    // 状态变更\n    const handleStatusChange = async row => {\n      try {\n        const response = await sensitiveWordApi.update(row.id, row);\n        if (response.data.code === 200) {\n          ElMessage.success('状态更新成功');\n        } else {\n          ElMessage.error('状态更新失败');\n          row.status = row.status === 1 ? 0 : 1; // 恢复原状态\n        }\n      } catch (error) {\n        ElMessage.error('状态更新失败');\n        row.status = row.status === 1 ? 0 : 1; // 恢复原状态\n      }\n    };\n\n    // 重新加载字典\n    const reloadDictionary = async () => {\n      try {\n        const response = await sensitiveWordApi.reloadDictionary();\n        if (response.data.code === 200) {\n          ElMessage.success('字典重新加载成功');\n        } else {\n          ElMessage.error('字典重新加载失败');\n        }\n      } catch (error) {\n        ElMessage.error('字典重新加载失败');\n      }\n    };\n\n    // 搜索\n    const handleSearch = () => {\n      currentPage.value = 1;\n      loadSensitiveWords();\n    };\n\n    // 分页处理\n    const handleSizeChange = val => {\n      pageSize.value = val;\n      currentPage.value = 1;\n      loadSensitiveWords();\n    };\n    const handleCurrentChange = val => {\n      currentPage.value = val;\n      loadSensitiveWords();\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      if (formRef.value) {\n        formRef.value.resetFields();\n      }\n      Object.assign(form, {\n        id: null,\n        word: '',\n        category: 'default',\n        level: 1,\n        status: 1\n      });\n    };\n\n    // 工具函数\n    const formatTime = time => {\n      if (!time) return '';\n      return new Date(time).toLocaleString();\n    };\n    const getCategoryTagType = category => {\n      const types = {\n        '侮辱': 'danger',\n        '政治': 'warning',\n        '违法': 'error',\n        'default': 'info'\n      };\n      return types[category] || 'info';\n    };\n    const getLevelTagType = level => {\n      const types = {\n        1: 'success',\n        2: 'warning',\n        3: 'danger'\n      };\n      return types[level] || 'info';\n    };\n    const getLevelText = level => {\n      const texts = {\n        1: '低',\n        2: '中',\n        3: '高'\n      };\n      return texts[level] || '未知';\n    };\n    onMounted(() => {\n      loadSensitiveWords();\n    });\n    return {\n      loading,\n      submitLoading,\n      batchSubmitLoading,\n      dialogVisible,\n      batchDialogVisible,\n      dialogTitle,\n      currentPage,\n      pageSize,\n      total,\n      searchCategory,\n      searchLevel,\n      sensitiveWords,\n      form,\n      formRef,\n      rules,\n      batchWords,\n      batchCategory,\n      batchLevel,\n      showAddDialog,\n      showEditDialog,\n      showBatchAddDialog,\n      handleSubmit,\n      handleBatchSubmit,\n      handleDelete,\n      handleStatusChange,\n      reloadDictionary,\n      handleSearch,\n      handleSizeChange,\n      handleCurrentChange,\n      resetForm,\n      formatTime,\n      getCategoryTagType,\n      getLevelTagType,\n      getLevelText\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","sensitiveWordApi","name","setup","loading","submitLoading","batchSubmitLoading","dialogVisible","batchDialogVisible","dialogTitle","currentPage","pageSize","total","searchCategory","searchLevel","sensitiveWords","formRef","form","id","word","category","level","status","batchWords","batchCategory","batchLevel","rules","required","message","trigger","loadSensitiveWords","value","response","getByPage","data","code","list","error","showAddDialog","showEditDialog","row","Object","assign","showBatchAddDialog","handleSubmit","validate","valid","update","add","success","handleBatchSubmit","trim","warning","words","split","filter","wordList","map","batchAdd","length","handleDelete","confirm","confirmButtonText","cancelButtonText","type","delete","handleStatusChange","reloadDictionary","handleSearch","handleSizeChange","val","handleCurrentChange","resetForm","resetFields","formatTime","time","Date","toLocaleString","getCategoryTagType","types","getLevelTagType","getLevelText","texts"],"sources":["D:\\code\\sensitive-word-filter-system\\frontend\\src\\views\\Words.vue"],"sourcesContent":["<template>\r\n  <div class=\"words-page\">\r\n    <!-- 操作栏 -->\r\n    <el-card class=\"operation-card\" shadow=\"hover\">\r\n      <el-row :gutter=\"20\" align=\"middle\">\r\n        <el-col :span=\"6\">\r\n          <el-button type=\"primary\" @click=\"showAddDialog\">\r\n            <el-icon><Plus /></el-icon>\r\n            添加敏感词\r\n          </el-button>\r\n          <el-button type=\"success\" @click=\"showBatchAddDialog\">\r\n            <el-icon><Upload /></el-icon>\r\n            批量添加\r\n          </el-button>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-select v-model=\"searchCategory\" placeholder=\"选择分类\" clearable @change=\"handleSearch\">\r\n            <el-option label=\"全部\" value=\"\" />\r\n            <el-option label=\"侮辱\" value=\"侮辱\" />\r\n            <el-option label=\"政治\" value=\"政治\" />\r\n            <el-option label=\"违法\" value=\"违法\" />\r\n            <el-option label=\"default\" value=\"default\" />\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-select v-model=\"searchLevel\" placeholder=\"选择级别\" clearable @change=\"handleSearch\">\r\n            <el-option label=\"全部\" value=\"\" />\r\n            <el-option label=\"低\" :value=\"1\" />\r\n            <el-option label=\"中\" :value=\"2\" />\r\n            <el-option label=\"高\" :value=\"3\" />\r\n          </el-select>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-button type=\"warning\" @click=\"reloadDictionary\">\r\n            <el-icon><Refresh /></el-icon>\r\n            重新加载字典\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </el-card>\r\n\r\n    <!-- 敏感词列表 -->\r\n    <el-card class=\"list-card\" shadow=\"hover\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>敏感词列表</span>\r\n          <span class=\"total-count\">共 {{ total }} 条记录</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-table :data=\"sensitiveWords\" style=\"width: 100%\" v-loading=\"loading\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n        <el-table-column prop=\"word\" label=\"敏感词\" width=\"150\" />\r\n        <el-table-column prop=\"category\" label=\"分类\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getCategoryTagType(scope.row.category)\">\r\n              {{ scope.row.category }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"level\" label=\"级别\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getLevelTagType(scope.row.level)\">\r\n              {{ getLevelText(scope.row.level) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-switch\r\n              v-model=\"scope.row.status\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              @change=\"handleStatusChange(scope.row)\"\r\n            />\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"180\">\r\n          <template #default=\"scope\">\r\n            {{ formatTime(scope.row.createTime) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" size=\"small\" @click=\"showEditDialog(scope.row)\">\r\n              <el-icon><Edit /></el-icon>\r\n              编辑\r\n            </el-button>\r\n            <el-button type=\"danger\" size=\"small\" @click=\"handleDelete(scope.row)\">\r\n              <el-icon><Delete /></el-icon>\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <!-- 分页 -->\r\n      <div class=\"pagination-wrapper\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :total=\"total\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 添加/编辑对话框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :title=\"dialogTitle\"\r\n      width=\"500px\"\r\n      @close=\"resetForm\"\r\n    >\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"100px\">\r\n        <el-form-item label=\"敏感词\" prop=\"word\">\r\n          <el-input v-model=\"form.word\" placeholder=\"请输入敏感词\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" prop=\"category\">\r\n          <el-select v-model=\"form.category\" placeholder=\"请选择分类\">\r\n            <el-option label=\"侮辱\" value=\"侮辱\" />\r\n            <el-option label=\"政治\" value=\"政治\" />\r\n            <el-option label=\"违法\" value=\"违法\" />\r\n            <el-option label=\"default\" value=\"default\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"级别\" prop=\"level\">\r\n          <el-radio-group v-model=\"form.level\">\r\n            <el-radio :label=\"1\">低</el-radio>\r\n            <el-radio :label=\"2\">中</el-radio>\r\n            <el-radio :label=\"3\">高</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-radio-group v-model=\"form.status\">\r\n            <el-radio :label=\"1\">启用</el-radio>\r\n            <el-radio :label=\"0\">禁用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitLoading\">\r\n            确定\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 批量添加对话框 -->\r\n    <el-dialog\r\n      v-model=\"batchDialogVisible\"\r\n      title=\"批量添加敏感词\"\r\n      width=\"600px\"\r\n    >\r\n      <el-form>\r\n        <el-form-item label=\"敏感词列表\">\r\n          <el-input\r\n            v-model=\"batchWords\"\r\n            type=\"textarea\"\r\n            :rows=\"10\"\r\n            placeholder=\"请输入敏感词，每行一个\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\">\r\n          <el-select v-model=\"batchCategory\" placeholder=\"请选择分类\">\r\n            <el-option label=\"侮辱\" value=\"侮辱\" />\r\n            <el-option label=\"政治\" value=\"政治\" />\r\n            <el-option label=\"违法\" value=\"违法\" />\r\n            <el-option label=\"default\" value=\"default\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"级别\">\r\n          <el-radio-group v-model=\"batchLevel\">\r\n            <el-radio :label=\"1\">低</el-radio>\r\n            <el-radio :label=\"2\">中</el-radio>\r\n            <el-radio :label=\"3\">高</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"batchDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleBatchSubmit\" :loading=\"batchSubmitLoading\">\r\n            确定\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { sensitiveWordApi } from '../utils/api'\r\n\r\nexport default {\r\n  name: 'Words',\r\n  setup() {\r\n    const loading = ref(false)\r\n    const submitLoading = ref(false)\r\n    const batchSubmitLoading = ref(false)\r\n    const dialogVisible = ref(false)\r\n    const batchDialogVisible = ref(false)\r\n    const dialogTitle = ref('添加敏感词')\r\n    const currentPage = ref(1)\r\n    const pageSize = ref(10)\r\n    const total = ref(0)\r\n    const searchCategory = ref('')\r\n    const searchLevel = ref('')\r\n    const sensitiveWords = ref([])\r\n    const formRef = ref()\r\n\r\n    // 表单数据\r\n    const form = reactive({\r\n      id: null,\r\n      word: '',\r\n      category: 'default',\r\n      level: 1,\r\n      status: 1\r\n    })\r\n\r\n    // 批量添加数据\r\n    const batchWords = ref('')\r\n    const batchCategory = ref('default')\r\n    const batchLevel = ref(1)\r\n\r\n    // 表单验证规则\r\n    const rules = {\r\n      word: [\r\n        { required: true, message: '请输入敏感词', trigger: 'blur' }\r\n      ],\r\n      category: [\r\n        { required: true, message: '请选择分类', trigger: 'change' }\r\n      ],\r\n      level: [\r\n        { required: true, message: '请选择级别', trigger: 'change' }\r\n      ]\r\n    }\r\n\r\n    // 加载敏感词列表\r\n    const loadSensitiveWords = async () => {\r\n      loading.value = true\r\n      try {\r\n        const response = await sensitiveWordApi.getByPage(currentPage.value, pageSize.value)\r\n        if (response.data.code === 200) {\r\n          const data = response.data.data\r\n          sensitiveWords.value = data.list\r\n          total.value = data.total\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('加载敏感词列表失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n\r\n    // 显示添加对话框\r\n    const showAddDialog = () => {\r\n      dialogTitle.value = '添加敏感词'\r\n      dialogVisible.value = true\r\n    }\r\n\r\n    // 显示编辑对话框\r\n    const showEditDialog = (row) => {\r\n      dialogTitle.value = '编辑敏感词'\r\n      Object.assign(form, row)\r\n      dialogVisible.value = true\r\n    }\r\n\r\n    // 显示批量添加对话框\r\n    const showBatchAddDialog = () => {\r\n      batchDialogVisible.value = true\r\n    }\r\n\r\n    // 提交表单\r\n    const handleSubmit = async () => {\r\n      if (!formRef.value) return\r\n      \r\n      await formRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n          submitLoading.value = true\r\n          try {\r\n            let response\r\n            if (form.id) {\r\n              response = await sensitiveWordApi.update(form.id, form)\r\n            } else {\r\n              response = await sensitiveWordApi.add(form)\r\n            }\r\n            \r\n            if (response.data.code === 200) {\r\n              ElMessage.success(form.id ? '更新成功' : '添加成功')\r\n              dialogVisible.value = false\r\n              loadSensitiveWords()\r\n            } else {\r\n              ElMessage.error(response.data.message || '操作失败')\r\n            }\r\n          } catch (error) {\r\n            ElMessage.error('操作失败')\r\n          } finally {\r\n            submitLoading.value = false\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    // 批量提交\r\n    const handleBatchSubmit = async () => {\r\n      if (!batchWords.value.trim()) {\r\n        ElMessage.warning('请输入敏感词')\r\n        return\r\n      }\r\n\r\n      batchSubmitLoading.value = true\r\n      try {\r\n        const words = batchWords.value.split('\\n').filter(word => word.trim())\r\n        const wordList = words.map(word => ({\r\n          word: word.trim(),\r\n          category: batchCategory.value,\r\n          level: batchLevel.value,\r\n          status: 1\r\n        }))\r\n\r\n        const response = await sensitiveWordApi.batchAdd(wordList)\r\n        if (response.data.code === 200) {\r\n          ElMessage.success(`批量添加成功，共 ${wordList.length} 个敏感词`)\r\n          batchDialogVisible.value = false\r\n          batchWords.value = ''\r\n          loadSensitiveWords()\r\n        } else {\r\n          ElMessage.error(response.data.message || '批量添加失败')\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('批量添加失败')\r\n      } finally {\r\n        batchSubmitLoading.value = false\r\n      }\r\n    }\r\n\r\n    // 删除敏感词\r\n    const handleDelete = async (row) => {\r\n      try {\r\n        await ElMessageBox.confirm(`确定要删除敏感词\"${row.word}\"吗？`, '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        \r\n        const response = await sensitiveWordApi.delete(row.id)\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('删除成功')\r\n          loadSensitiveWords()\r\n        } else {\r\n          ElMessage.error(response.data.message || '删除失败')\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          ElMessage.error('删除失败')\r\n        }\r\n      }\r\n    }\r\n\r\n    // 状态变更\r\n    const handleStatusChange = async (row) => {\r\n      try {\r\n        const response = await sensitiveWordApi.update(row.id, row)\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('状态更新成功')\r\n        } else {\r\n          ElMessage.error('状态更新失败')\r\n          row.status = row.status === 1 ? 0 : 1 // 恢复原状态\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('状态更新失败')\r\n        row.status = row.status === 1 ? 0 : 1 // 恢复原状态\r\n      }\r\n    }\r\n\r\n    // 重新加载字典\r\n    const reloadDictionary = async () => {\r\n      try {\r\n        const response = await sensitiveWordApi.reloadDictionary()\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('字典重新加载成功')\r\n        } else {\r\n          ElMessage.error('字典重新加载失败')\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('字典重新加载失败')\r\n      }\r\n    }\r\n\r\n    // 搜索\r\n    const handleSearch = () => {\r\n      currentPage.value = 1\r\n      loadSensitiveWords()\r\n    }\r\n\r\n    // 分页处理\r\n    const handleSizeChange = (val) => {\r\n      pageSize.value = val\r\n      currentPage.value = 1\r\n      loadSensitiveWords()\r\n    }\r\n\r\n    const handleCurrentChange = (val) => {\r\n      currentPage.value = val\r\n      loadSensitiveWords()\r\n    }\r\n\r\n    // 重置表单\r\n    const resetForm = () => {\r\n      if (formRef.value) {\r\n        formRef.value.resetFields()\r\n      }\r\n      Object.assign(form, {\r\n        id: null,\r\n        word: '',\r\n        category: 'default',\r\n        level: 1,\r\n        status: 1\r\n      })\r\n    }\r\n\r\n    // 工具函数\r\n    const formatTime = (time) => {\r\n      if (!time) return ''\r\n      return new Date(time).toLocaleString()\r\n    }\r\n\r\n    const getCategoryTagType = (category) => {\r\n      const types = {\r\n        '侮辱': 'danger',\r\n        '政治': 'warning',\r\n        '违法': 'error',\r\n        'default': 'info'\r\n      }\r\n      return types[category] || 'info'\r\n    }\r\n\r\n    const getLevelTagType = (level) => {\r\n      const types = {\r\n        1: 'success',\r\n        2: 'warning',\r\n        3: 'danger'\r\n      }\r\n      return types[level] || 'info'\r\n    }\r\n\r\n    const getLevelText = (level) => {\r\n      const texts = {\r\n        1: '低',\r\n        2: '中',\r\n        3: '高'\r\n      }\r\n      return texts[level] || '未知'\r\n    }\r\n\r\n    onMounted(() => {\r\n      loadSensitiveWords()\r\n    })\r\n\r\n    return {\r\n      loading,\r\n      submitLoading,\r\n      batchSubmitLoading,\r\n      dialogVisible,\r\n      batchDialogVisible,\r\n      dialogTitle,\r\n      currentPage,\r\n      pageSize,\r\n      total,\r\n      searchCategory,\r\n      searchLevel,\r\n      sensitiveWords,\r\n      form,\r\n      formRef,\r\n      rules,\r\n      batchWords,\r\n      batchCategory,\r\n      batchLevel,\r\n      showAddDialog,\r\n      showEditDialog,\r\n      showBatchAddDialog,\r\n      handleSubmit,\r\n      handleBatchSubmit,\r\n      handleDelete,\r\n      handleStatusChange,\r\n      reloadDictionary,\r\n      handleSearch,\r\n      handleSizeChange,\r\n      handleCurrentChange,\r\n      resetForm,\r\n      formatTime,\r\n      getCategoryTagType,\r\n      getLevelTagType,\r\n      getLevelText\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.words-page {\r\n  padding: 20px;\r\n}\r\n\r\n.operation-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.list-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.total-count {\r\n  color: #909399;\r\n  font-size: 14px;\r\n}\r\n\r\n.pagination-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .operation-card .el-row {\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  }\r\n  \r\n  .operation-card .el-col {\r\n    width: 100%;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}