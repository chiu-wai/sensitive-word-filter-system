{"ast":null,"code":"import { defineComponent, inject, createVNode, Comment } from 'vue';\nimport { CASCADER_PANEL_INJECTION_KEY } from './types.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isArray } from '@vue/shared';\nfunction isVNodeEmpty(vnodes) {\n  return !!(isArray(vnodes) ? vnodes.every(({\n    type\n  }) => type === Comment) : (vnodes == null ? void 0 : vnodes.type) === Comment);\n}\nvar NodeContent = defineComponent({\n  name: \"NodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    disabled: Boolean\n  },\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"cascader-node\");\n    const {\n      config,\n      renderLabelFn\n    } = inject(CASCADER_PANEL_INJECTION_KEY);\n    const {\n      checkOnClickNode,\n      checkOnClickLeaf\n    } = config;\n    const {\n      node,\n      disabled\n    } = props;\n    const {\n      data,\n      label: nodeLabel\n    } = node;\n    const label = () => {\n      const renderLabel = renderLabelFn == null ? void 0 : renderLabelFn({\n        node,\n        data\n      });\n      return isVNodeEmpty(renderLabel) ? nodeLabel : renderLabel != null ? renderLabel : nodeLabel;\n    };\n    function handleClick() {\n      if ((checkOnClickNode || node.isLeaf && checkOnClickLeaf) && !disabled) {\n        emit(\"handleSelectCheck\", !node.checked);\n      }\n    }\n    return () => createVNode(\"span\", {\n      \"class\": ns.e(\"label\"),\n      \"onClick\": handleClick\n    }, [label()]);\n  }\n});\nexport { NodeContent as default };","map":{"version":3,"names":["isArray","vnodes","every","type","Comment","NodeContent","defineComponent","props","node","Object","required","disabled","Boolean","setup","emit","ns","useNamespace","config","renderLabelFn","inject","CASCADER_PANEL_INJECTION_KEY","checkOnClickNode","checkOnClickLeaf","data","label","nodeLabel","renderLabel","isVNodeEmpty","handleClick","isLeaf","checked","createVNode","e"],"sources":["../../../../../../packages/components/cascader-panel/src/node-content.tsx"],"sourcesContent":["import { Comment, defineComponent, inject } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isArray } from '@element-plus/utils'\nimport { CASCADER_PANEL_INJECTION_KEY } from './types'\n\nimport type { PropType, VNode } from 'vue'\nimport type { CascaderNode } from './types'\n\nfunction isVNodeEmpty(vnodes?: VNode[] | VNode) {\n  return !!(isArray(vnodes)\n    ? vnodes.every(({ type }) => type === Comment)\n    : vnodes?.type === Comment)\n}\n\nexport default defineComponent({\n  name: 'NodeContent',\n  props: {\n    node: {\n      type: Object as PropType<CascaderNode>,\n      required: true,\n    },\n    disabled: Boolean,\n  },\n  setup(props, { emit }) {\n    const ns = useNamespace('cascader-node')\n    const { config, renderLabelFn } = inject(CASCADER_PANEL_INJECTION_KEY)!\n    const { checkOnClickNode, checkOnClickLeaf } = config\n    const { node, disabled } = props\n    const { data, label: nodeLabel } = node\n\n    const label = () => {\n      const renderLabel = renderLabelFn?.({ node, data })\n      return isVNodeEmpty(renderLabel) ? nodeLabel : renderLabel ?? nodeLabel\n    }\n    function handleClick() {\n      if (\n        (checkOnClickNode || (node.isLeaf && checkOnClickLeaf)) &&\n        !disabled\n      ) {\n        emit('handleSelectCheck', !node.checked)\n      }\n    }\n    return () => (\n      <span class={ns.e('label')} onClick={handleClick}>\n        {label()}\n      </span>\n    )\n  },\n})\n"],"mappings":";;;;;EAQS,UAAAA,OAAA,CAAAC,MAAa,IAA0BA,MAAA,CAAAC,KAAA;IACvCC;EACa,MAAAA,IAAA,KAAAC,OAAA,KAAAH,MAAA,oBAAAA,MAAA,CAAAE,IAAA,MAAAC,OAAA;;AAErB,IAAAC,WAAA,GAAAC,eAAA;;EAEDC,KAAA;IACEC,IAAM,EADuB;MAE7BL,IAAO,EAAAM,MAAA;MACLC,QAAM;IACJ;IACAC,QAAA,EAAQC;;EAEVC,MAAAN,KAAU;IAPiBO;;IASxB,MAAAC,EAAA,GAAQC,YAAA;IAAE;MAAQC,MAAA;MACrBC;KACM,GAAAC,MAAA,CAAAC,4BAAA;UAAA;MAAUC,gBAAA;MAAkBC;KAC5B,GAAAL,MAAA;UAAA;MAAoBT,IAAA;MAApBG;KACA,GAAAJ,KAAA;UAAA;MAAQgB,IAAA;MAARC,KAAN,EAAAC;KACM,GAAAjB,IAAA;UAAAgB,KAAA,GAAAA,CAAA;MAAQ,MAAOE,WAAA,GAAAR,aAAA,oBAAAA,aAAA;QAAcV,IAAnC;;OAEM;MACJ,OAAMmB,YAAc,CAAAD,WAAA,IAAgBD,SAAA,GAAAC,WAAA,WAAAA,WAAA,GAAAD,SAAA;;IAAQ,SAAAG,YAAA;MAAR,IAApC,CAAAP,gBAAA,IAAAb,IAAA,CAAAqB,MAAA,IAAAP,gBAAA,MAAAX,QAAA;QACOG,IAAA,oBAAY,GAAAN,IAAA,CAAAsB,OAAZ;;;IAET,aAAAC,WAAuB;MACrB,OACmB,EAAAhB,EAAA,CAAAiB,CAAA;MAGjB,SAAI,EAAAJ;IACL,IAAAJ,KAAA;EACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}